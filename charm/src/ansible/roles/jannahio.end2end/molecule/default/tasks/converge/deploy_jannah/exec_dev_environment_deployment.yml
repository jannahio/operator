# Implements https://capacitorjs.com/docs/getting-started/environment-setup
- name: "Deploy Jannah dev environment"
  block:
    - name: "Create jannahio/frontend download directory"
      file:
        path: "${MOLECULE_EPHEMERAL_DIRECTORY}/jannahio/frontend"
        state: directory
        mode: 0755
      tags:
        - "deploy_jannah"
        - "molecule_converge"
        - "operator_e2e"
    - name: "Create jannahio/middleware download directory"
      file:
        path: "${MOLECULE_EPHEMERAL_DIRECTORY}/jannahio/middleware"
        state: directory
        mode: 0755
      tags:
        - "deploy_jannah"
        - "molecule_converge"
        - "operator_e2e"
    - name: "Read-write git checkout https://github.com/jannahio/frontend.git"
      ansible.builtin.git:
        repo: "https://github.com/jannahio/frontend.git"
        dest: "${MOLECULE_EPHEMERAL_DIRECTORY}/jannahio/frontend"
        version: "task-kSPivE2w-jannah-vue-js.loginlogout.ionic.ui"
      tags:
        - "deploy_jannah"
        - "molecule_converge"
        - "operator_e2e"
    - name: "Read-write git checkout https://github.com/jannahio/middleware.git"
      ansible.builtin.git:
        repo: "https://github.com/jannahio/middleware.git"
        dest: "${MOLECULE_EPHEMERAL_DIRECTORY}/jannahio/middleware"
        version: "task-aVYVi17T-base-jannah-django-app-model.login_jannah.graphql"
      tags:
        - "deploy_jannah"
        - "molecule_converge"
        - "operator_e2e"
    - name: "pip install -r jannah_graphql/requirements.txt"
      shell: |
        pip install -r requirements.txt
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/jannahio/middleware/jannah_graphql"
      tags:
        - "deploy_jannah"
        - "molecule_converge"
        - "operator_e2e"
    - name: "Generate run_jannah_frontend.sh"
      template:
        src: "files/templates/run_jannah_frontend.sh"
        dest: "${MOLECULE_EPHEMERAL_DIRECTORY}/jannahio/frontend/multiplatform/Jannah/JannahIonic/run_jannah_frontend.sh"
        backup: yes
      tags:
        - "deploy_jannah"
        - "molecule_converge"
        - "operator_e2e"
    - name: "Generate run_jannah_middleware.sh"
      template:
        src: "files/templates/run_jannah_frontend.sh"
        dest: "${MOLECULE_EPHEMERAL_DIRECTORY}/jannahio/middleware/jannah_graphql/run_jannah_middleware.sh"
        backup: yes
      tags:
        - "deploy_jannah"
        - "molecule_converge"
        - "operator_e2e"
    - name: "chmod +x run_jannah_middleware.sh"
      shell: |
        chmod +x run_jannah_middleware.sh;
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/jannahio/middleware/jannah_graphql"
      tags:
        - "deploy_jannah"
        - "molecule_converge"
        - "operator_e2e"
    - name: "chmod +x run_jannah_frontend.sh"
      shell: |
        chmod +x run_jannah_frontend.sh;
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/jannahio/frontend/multiplatform/Jannah/JannahIonic"
      tags:
        - "deploy_jannah"
        - "molecule_converge"
        - "operator_e2e"
#    - name: "Start dev Jannah middleware"
#      shell: |
#        nohup python3 manage.py runserver </dev/null >/dev/null 2>&1 &
#      args:
#        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/jannahio/middleware/jannah_graphql"
#      async: 10
#      poll: 0
#      tags:
#        - "deploy_jannah"
#        - "molecule_converge"
#        - "operator_e2e"
    - name: "npx cap copy"
      shell: |
        npx cap copy;
      async: 600
      poll: 5
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/jannahio/frontend/multiplatform/Jannah/JannahIonic"
      tags:
        - "deploy_jannah"
        - "molecule_converge"
        - "operator_e2e"
    - name: "ionic build"
      shell: |
        ionic build;
      async: 600
      poll: 5
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/jannahio/frontend/multiplatform/Jannah/JannahIonic"
      tags:
        - "deploy_jannah"
        - "molecule_converge"
        - "operator_e2e"
    - name: "arch -x86_64 pod install"
      shell: |
        arch -x86_64 pod install;
      async: 600
      poll: 5
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/jannahio/frontend/multiplatform/Jannah/JannahIonic"
      tags:
        - "deploy_jannah"
        - "molecule_converge"
        - "operator_e2e"
#    - name: "Start dev Jannah frontend"
#      shell: |
#        npm install pinia  --legacy-peer-deps
#        nohup ionic serve &</dev/null >/dev/null 2>&1 &
#      args:
#        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/jannahio/frontend/multiplatform/Jannah/JannahIonic"
#      tags:
#        - "deploy_jannah"
#        - "molecule_converge"
#        - "operator_e2e"
#        - "dev_debug"
  rescue:
    - name: "Deploy Jannah Development Exception"
      ansible.builtin.debug:
        msg: 'Deploy Jannah Development Exception'
    - name: Re-emit failure
      vars:
        failed_task:
          result: '{{ ansible_failed_result }}'
      fail:
        msg: '{{ failed_task }}'
  ignore_errors: false
