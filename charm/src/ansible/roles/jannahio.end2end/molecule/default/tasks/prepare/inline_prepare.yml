---
#   On MacOs M2 or Multipass/Ubuntu, prepare inline for Docker Desktop.
- name: "Inline prepare operator - Ubuntu/Darwin(ARM64)"
  block:
    - name: "install juju - Ubuntu/Darwin(ARM64)"
      shell: |
        sudo snap install juju --channel 3.0/stable;
      when: ansible_facts['os_family'] == "Debian"
      async: 600
      poll: 5
      tags:
        - "multipass_infra"
        - "molecule_prepare"
        - "operator_e2e"
    - name: "Since the juju package is strictly confined, you also need to manually create a path-Ubuntu/Darwin(ARM64)"
      shell: |
        mkdir -vp /home/ubuntu/.local/share;
      when: ansible_facts['os_family'] == "Debian"
      async: 600
      poll: 5
      tags:
        - "multipass_infra"
        - "molecule_prepare"
        - "operator_e2e"
    - name: "juju clouds"
      shell: |
        juju clouds;
        exit 0;
      when: ansible_facts['os_family'] == "Debian"
      tags:
        - "multipass_infra"
        - "molecule_prepare"
        - "operator_e2e"
    - name: "Install juju controller into microk8s cloud - inline"
      shell: |
        juju bootstrap --show-log=true --verbose=true microk8s \
        {{ Jannah.stages.bootstrap.build.juju.controller.name }};
      when: ansible_facts['os_family'] == "Debian"
      async: 1600
      poll: 3
      register: multipass_infra_install_juju_controller_into_microk8s_cloud
      tags:
        - "multipass_infra"
        - "molecule_prepare"
        - "operator_e2e"
    - name: "Create a workspace/model, on the controller"
      shell: |
        juju add-model {{ Jannah.stages.bootstrap.build.juju.model.name }};
      when: ansible_facts['os_family'] == "Debian"
      async: 1600
      poll: 3
      register: multipass_infra_create_a_workspace_model_on_the_controller
      tags:
        - "multipass_infra"
        - "molecule_prepare"
        - "operator_e2e"
    - name: "juju status"
      shell: |
        juju status;
      when: ansible_facts['os_family'] == "Debian"
      tags:
        - "multipass_infra"
        - "molecule_prepare"
        - "operator_e2e"
    - name: "Pack operator"
      shell: |
        charmcraft pack -v --debug
      when: ansible_facts['os_family'] == "Debian"
      args:
        chdir: "{{ Jannah.global.ansible.working_dir }}/charm/"
      async: 1600
      poll: 15
      register: multipass_infra_pack_operator
      tags:
        - "multipass_infra"
        - "molecule_prepare"
        - "operator_e2e"
    - name: "list jannah-operator_ubuntu-22.04-amd64-arm64.charm"
      shell: |
        ls -lrt {{ Jannah.global.ansible.working_dir }}/charm/jannah-operator_ubuntu-22.04-amd64-arm64.charm
      when: ansible_facts['os_family'] == "Debian"
      async: 600
      poll: 5
      tags:
        - "multipass_infra"
        - "molecule_prepare"
        - "operator_e2e"
  rescue:
    - name: "Inline Prepare Operator Exception"
      ansible.builtin.debug:
        msg: 'Inline Prepare Operator Exception'
    - name: Re-emit failure
      vars:
        failed_task:
          result: '{{ ansible_failed_result }}'
      fail:
        msg: '{{ failed_task }}'
      tags:
        - "multipass_infra"
        - "molecule_prepare"
        - "operator_e2e"
  ignore_errors: false
