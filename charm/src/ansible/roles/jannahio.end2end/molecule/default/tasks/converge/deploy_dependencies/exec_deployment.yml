---
- name: "Deploy dependencies for Jannah"
  block:
    - name: "juju add-model kubeflow - exec"
      shell: |
        multipass exec {{ Jannah.stages.bootstrap.build.vm.name }} \
        -- juju add-model kubeflow;
        multipass exec {{ Jannah.stages.bootstrap.build.vm.name }} \
        -- juju models;
      async: 1600
      poll: 15
      tags:
        - "deploy_dependencies"
        - "molecule_converge"
        - "operator_e2e"
        - "dev_debug"
    - name: "juju deploy kubeflow --trust - exec"
      shell: |
        multipass exec {{ Jannah.stages.bootstrap.build.vm.name }} \
        -- juju deploy kubeflow --trust;
      async: 1600
      poll: 15
      tags:
        - "deploy_dependencies"
        - "molecule_converge"
        - "operator_e2e"
        - "dev_debug"
    - name: "juju deploy postgresql-k8s - exec"
      shell: |
        multipass exec {{ Jannah.stages.bootstrap.build.vm.name }} \
        -- juju deploy mattermost-k8s;
      async: 1600
      poll: 15
      tags:
        - "deploy_dependencies"
        - "molecule_converge"
        - "operator_e2e"
        - "dev_debug"
    - name: "juju deploy postgresql-k8s - exec"
      shell: |
        multipass exec {{ Jannah.stages.bootstrap.build.vm.name }} \
        -- juju deploy postgresql-k8s;
      async: 1600
      poll: 15
      tags:
        - "deploy_dependencies"
        - "molecule_converge"
        - "operator_e2e"
        - "dev_debug"
    - name: "juju integrate mattermost-k8s postgresql-k8s:db - exec"
      shell: |
        multipass exec {{ Jannah.stages.bootstrap.build.vm.name }} \
        -- juju integrate mattermost-k8s postgresql-k8s:db;
      async: 1600
      poll: 15
      tags:
        - "deploy_dependencies"
        - "molecule_converge"
        - "operator_e2e"
        - "dev_debug"
  rescue:
    - name: "Deploy dependencies for Jannah Exception"
      ansible.builtin.debug:
        msg: 'Deploy dependencies for Jannah Exception'
    - name: Re-emit failure
      vars:
        failed_task:
          result: '{{ ansible_failed_result }}'
      fail:
        msg: '{{ failed_task }}'
  ignore_errors: false
