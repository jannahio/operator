---
- name: "Builds ubuntu docker images for use in Helm Chart"
  block:
    - name: "Create images/ubuntu directory"
      file:
        path: "${MOLECULE_EPHEMERAL_DIRECTORY}/images/ubuntu"
        state: directory
        mode: 0755
      tags:
        - "build_images"
        - "molecule_prepare"
        - "operator_e2e"
        - "dev_debug"
    - name: "Generate images/ubuntu/ubuntu.Dockerfile"
      template:
        src: "files/templates/ubuntu/ubuntu.Dockerfile"
        dest: "${MOLECULE_EPHEMERAL_DIRECTORY}/images/ubuntu/ubuntu.Dockerfile"
      tags:
        - "build_images"
        - "molecule_prepare"
        - "operator_e2e"
        - "dev_debug"
    - name: "Generate project/ubuntu.Dockerfile"
      template:
        src: "files/templates/ubuntu/ubuntu.Dockerfile"
        dest: "{{ Jannah.global.ansible.working_dir }}/ubuntu.Dockerfile"
      tags:
        - "build_images"
        - "molecule_prepare"
        - "operator_e2e"
        - "dev_debug"
    - name: "Generate ubuntu/ubuntu.Dockerfile.dockerignore"
      template:
        src: "files/templates/ubuntu/ubuntu.Dockerfile.dockerignore"
        dest: "${MOLECULE_EPHEMERAL_DIRECTORY}/images/ubuntu/ubuntu.Dockerfile.dockerignore"
      tags:
        - "build_images"
        - "molecule_prepare"
        - "operator_e2e"
        - "dev_debug"
    - name: "Generate project/ubuntu.Dockerfile.dockerignore"
      template:
        src: "files/templates/ubuntu/ubuntu.Dockerfile.dockerignore"
        dest: "{{ Jannah.global.ansible.working_dir }}/ubuntu.Dockerfile.dockerignore"
      tags:
        - "build_images"
        - "molecule_prepare"
        - "operator_e2e"
        - "dev_debug"
    - name: "Build Ubuntu image - jallohmediabuild/jannah-ubuntu-operator-arm64"
      environment:
        - IMG: "{{ Jannah.stages.bootstrap.build.IMG }}"
      shell: |
        docker buildx build \
          --builder=kube \
          -t jallohmediabuild/jannah-ubuntu-operator-arm64:v0.0.1 \
          --platform=linux/arm64 \
          -f ubuntu.Dockerfile \
          --load .
      async: 1200
      poll: 5
#      when: ansible_facts['os_family'] == "Darwin" and ansible_facts['architecture'] != "x86_64"
      args:
        chdir: "{{ Jannah.global.ansible.working_dir }}"
      tags:
        - "build_images"
        - "molecule_prepare"
        - "operator_e2e"
        - "dev_debug"
    - name: "Build Ubuntu image - jallohmediabuild/jannah-ubuntu-operator-amd64"
      environment:
        - IMG: "{{ Jannah.stages.bootstrap.build.IMG }}"
      shell: |
        docker buildx build \
          --builder=kube \
          -t jallohmediabuild/jannah-ubuntu-operator-amd64:v0.0.1 \
          --platform=linux/amd64 \
          -f ubuntu.Dockerfile \
          --load .
      async: 1200
      poll: 5
      #      when: ansible_facts['os_family'] == "Darwin" and ansible_facts['architecture'] != "x86_64"
      args:
        chdir: "{{ Jannah.global.ansible.working_dir }}"
      tags:
        - "build_images"
        - "molecule_prepare"
        - "operator_e2e"
        - "dev_debug"
    - name: "Import prepare build image tasks - ubuntu middleware and frontend"
      include_tasks: '{{ prepare_ubuntu_middleware_and_frontend_task_items }}'
      with_fileglob:
        - build_ubuntu_middleware_images.yml
        - build_ubuntu_frontend_images.yml
      loop_control:
        loop_var: prepare_ubuntu_middleware_and_frontend_task_items
      tags:
        - "docker_desktop_infra"
        - "molecule_prepare"
        - "operator_e2e"
        - "dev_debug"
  rescue:
    - name: "Builds Ubuntu Docker Images Exception"
      ansible.builtin.debug:
        msg: 'Builds Ubuntu Docker Images Exception'
    - name: Re-emit failure
      vars:
        failed_task:
          result: '{{ ansible_failed_result }}'
      fail:
        msg: '{{ failed_task }}'
      tags:
        - "build_images"
        - "build_ubuntu_images"
        - "molecule_prepare"
        - "operator_e2e"
  ignore_errors: false
