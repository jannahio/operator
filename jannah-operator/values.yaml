# Default values for jannah-helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

images:
  proxy:
    name: jannah-nginx
    repository: docker.io/jannah-registry/jannah-nginx
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: v0.0.1
  boot:
    name:  jannah-boot
    repository: docker.io/jannah-registry/jannah-boot-arm64-ubuntu
    pullPolicy: IfNotPresent
    tag: v0.0.1
    port: 8000
    service:
      apiVersion: v1
      kind: Service
      metadata:
        name: jannah-boot
        labels:
          app: jannah-boot
          service: jannah-boot
      spec:
        ports:
          port: 8000
          name: http
        selector:
          app: jannah-boot
  frontend:
    name:  jannah-web
    repository: docker.io/jannah-registry/jannah-web-arm64-ubuntu
    pullPolicy: IfNotPresent
    tag: v0.0.1
    port: 8100
    service:
      apiVersion: v1
      kind: Service
      metadata:
        name: jannah-web
        labels:
          app: jannah-web
          service: jannah-web
      spec:
        ports:
          port: 8100
          name: http
          protocol: TCP
        selector:
          app: jannah-web
        version1: v1
  middleware:
    name:  jannah-compute
    repository: docker.io/jannah-registry/jannah-compute-arm64-ubuntu
    pullPolicy: IfNotPresent
    tag: v0.0.1
    port: 8200
    service:
      apiVersion: v1
      kind: Service
      metadata:
        name: jannah-compute
        labels:
          app: jannah-compute
          service: jannah-compute
      spec:
        ports:
          port: 8200
          name: http
        selector:
          app: jannah-compute
        version1: v1 
        version2: v2 
        version3: v3
  registry:
    name:  jannah-registry
    repository: docker.io/jannah-registry/jannah-registry-arm64-ubuntu
    pullPolicy: IfNotPresent
    tag: v0.0.1
    port: 5000
    service:
      apiVersion: v1
      kind: Service
      metadata:
        name: jannah-registry
        labels:
          app: jannah-registry
          service: jannah-registry
      spec:
        ports:
         - port: 5000
           name: http
        selector:
          app: jannah-registry

# imagePullSecrets:
#   - name: jannah-registry-cred
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

secrets:
  - name: "parcona-auth"
    key: "pgbouncer-uri"
    
gateway:
 name: jannah-gateway
 istio: ingressgateway
