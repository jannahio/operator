---
# Implements:
# https://juju.is/docs/sdk/set-up-your-development-environment
- name: "Kubernetes on Ubuntu environment"
  block:
    # Create a VM, and mount local repository path,
    - name: "Create an Ubuntu VM, so we can use charmcraft to bootstrap python based operator"
      shell: |
        multipass launch \
        -n "{{ Jannah.stages.bootstrap.build.vm.name }}" \
        -m "{{ Jannah.stages.bootstrap.build.vm.memory }}" \
        -c "{{ Jannah.stages.bootstrap.build.vm.cpus }}" \
        -d "{{ Jannah.stages.bootstrap.build.vm.disk }}";
      async: 600
      poll: 5
      register: multipass_launch
      tags:
        - "multipass_infra"
        - "operator_e2e"
    - debug: var=multipass_launch
      tags:
        - "multipass_infra"
        - "operator_e2e"

    - name: "Mount the working directory"
      shell: |
        multipass mount {{ Jannah.global.ansible.working_dir }} \
        {{ Jannah.stages.bootstrap.build.vm.name }}:{{ Jannah.global.ansible.working_dir }}
      tags:
        - "multipass_infra"
        - "operator_e2e"

    - name: "Initialize lxd"
      shell: |
        multipass exec {{ Jannah.stages.bootstrap.build.vm.name }} \
        -- lxd init --auto;
      async: 600
      poll: 5
      register: multipass_infra_charm_lxd_init
      tags:
        - "multipass_infra"
        - "operator_e2e"
    - debug: var=multipass_infra_charm_lxd_init
      tags:
        - "multipass_infra"
        - "operator_e2e"

    - name: "install charmcraft, microk8s, and juju"
      shell: |
        multipass exec {{ Jannah.stages.bootstrap.build.vm.name }} \
        -- sudo snap install charmcraft --classic;
        multipass exec {{ Jannah.stages.bootstrap.build.vm.name }} \
        -- sudo snap install juju --channel 3.0/stable;
      async: 600
      poll: 5
      register: multipass_infra_install_charmcraft
      tags:
        - "multipass_infra"
        - "operator_e2e"
    - debug: var=multipass_infra_install_charmcraft
      tags:
        - "multipass_infra"
        - "operator_e2e"
    - name: "install microk8s"
      shell: |
        # Install Microk8s from snap:
        multipass exec {{ Jannah.stages.bootstrap.build.vm.name }} \
        -- sudo snap install microk8s --channel 1.25-strict/stable
        
        # Add the 'ubuntu' user to the MicroK8s group:
        multipass exec {{ Jannah.stages.bootstrap.build.vm.name }} \
        -- sudo usermod -a -G snap_microk8s ubuntu
        
        # Give the 'ubuntu' user permissions to read the ~/.kube directory:
        multipass exec {{ Jannah.stages.bootstrap.build.vm.name }} \
        -- sudo chown -f -R ubuntu ~/.kube
        
        # Create the 'microk8s' group:
        multipass exec {{ Jannah.stages.bootstrap.build.vm.name }} \
        -- newgrp snap_microk8s
        
        # Enable the necessary MicroK8s addons:
        multipass exec {{ Jannah.stages.bootstrap.build.vm.name }} \
        -- sudo microk8s enable hostpath-storage dns
        
        # Set up a short alias for the Kubernetes CLI:
        multipass exec {{ Jannah.stages.bootstrap.build.vm.name }} \
        -- sudo snap alias microk8s.kubectl kubectl
      async: 600
      poll: 5
      register: multipass_infra_install_charmcraft
      tags:
        - "multipass_infra"
        - "operator_e2e"
    - name: "Make ephemeral directory"
      shell: |
        multipass exec {{ Jannah.stages.bootstrap.build.vm.name }} \
        -- mkdir -vp $MOLECULE_EPHEMERAL_DIRECTORY/;
      args:
        chdir: "$MOLECULE_EPHEMERAL_DIRECTORY/"
      async: 600
      poll: 5
      register: multipass_infra_install_docker
      tags:
        - "multipass_infra"
        - "operator_e2e"
    # sudo snap install docker
    - name: "install docker"
      shell: |
        multipass exec {{ Jannah.stages.bootstrap.build.vm.name }} \
        -- curl -fsSL https://get.docker.com -o get-docker.sh;
        multipass exec {{ Jannah.stages.bootstrap.build.vm.name }} \
        -- sudo sh get-docker.sh;
      args:
        chdir: "$MOLECULE_EPHEMERAL_DIRECTORY/"
      async: 600
      poll: 5
      register: multipass_infra_install_docker
      tags:
        - "multipass_infra"
        - "operator_e2e"
    - debug: var=multipass_infra_install_docker
      tags:
        - "multipass_infra"
        - "operator_e2e"

  rescue:
    - name: "Multipass Infra Exception"
      ansible.builtin.debug:
        msg: 'Multipass Infra Exception'
      register: multipass_infra_debug_resources
  ignore_errors: false
