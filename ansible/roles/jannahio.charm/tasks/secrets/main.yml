---
# Implements:
# https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#add-image-pull-secret-to-service-account

# Note: 12/28/2022 - As part of converge and indempotent scenarios,
# the playbooks/roles are run twice. Since we are creating the secrets
# on the command line (as oppose to yaml declarations), we need to first
# query Kubernetes for the secret.  We only create the secrets if they
# have not already been created.
- name: Query Image Registry Secret
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: '{{ Jannah.stages.bootstrap.secrets.image_registry.name }}'
    namespace: '{{ Jannah.global.namespace }}'
  tags:
    - "bootstrap_docker_secrets"
    - "bootstrap_secrets_infra"
    - "secrets_infra"
  register: bootstrap_sc_create_check

- name: Query Image Registry Secret - Default namesspace
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: '{{ Jannah.stages.bootstrap.secrets.image_registry.name }}'
    namespace: 'default'
  tags:
    - "bootstrap_docker_secrets"
    - "bootstrap_secrets_infra"
    - "secrets_infra"
  register: bootstrap_sc_create_check_default

- name: Query Image Root Cert Registry Secret
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: '{{ Jannah.stages.bootstrap.secrets.root_cert.name }}'
    namespace: '{{ Jannah.global.namespace }}'
  tags:
    - "bootstrap_docker_secrets"
    - "bootstrap_secrets_infra"
    - "secrets_infra"
  register: bootstrap_root_cert_sc_create_check

- name: Query Image Root Cert Registry Secret - Default Namespace
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: '{{ Jannah.stages.bootstrap.secrets.root_cert.name }}'
    namespace: 'default'
  tags:
    - "bootstrap_docker_secrets"
    - "bootstrap_secrets_infra"
    - "secrets_infra"
  register: bootstrap_root_cert_sc_create_check_default


- name: "bootstrap_sc_check"
  debug: var=bootstrap_sc_create_check

- name: "bootstrap_root_cert_sc_check"
  debug: var=bootstrap_root_cert_sc_create_check

- name: "bootstrap_sc_check"
  debug: var=bootstrap_sc_create_check_default

- name: "bootstrap_root_cert_sc_check"
  debug: var=bootstrap_root_cert_sc_create_check_default

- name: "Create Registry Secret Playbooks"
  block:
    - name: "Create Registry Secret"
      shell: |
        kubectl create secret docker-registry {{ Jannah.stages.bootstrap.secrets.image_registry.name }} --docker-server={{ Jannah.credentials.dockerhub.url }} \
        --docker-username={{ Jannah.credentials.dockerhub.USERNAME }} --docker-password={{ Jannah.credentials.dockerhub.PASSWORD }} \
        --docker-email={{ Jannah.credentials.dockerhub.EMAIL }} -n {{ Jannah.global.namespace }};
      # Do not create if we already have an instance
      when: (bootstrap_sc_create_check['api_found'] == true) and (bootstrap_sc_create_check['resources']|length == 0)
      tags:
        - "bootstrap_docker_secrets"
        - "bootstrap_secrets_infra"
        - "secrets_infra"

- name: "Create Registry Secret Playbooks - Default Namespace"
  block:
    - name: "Create Registry Secret"
      shell: |
        kubectl create secret docker-registry {{ Jannah.stages.bootstrap.secrets.image_registry.name }} --docker-server={{ Jannah.credentials.dockerhub.url }} \
        --docker-username={{ Jannah.credentials.dockerhub.USERNAME }} --docker-password={{ Jannah.credentials.dockerhub.PASSWORD }} \
        --docker-email={{ Jannah.credentials.dockerhub.EMAIL }} -n default;
      # Do not create if we already have an instance
      when: (bootstrap_sc_create_check_default['api_found'] == true) and (bootstrap_sc_create_check_default['resources']|length == 0)
      tags:
        - "bootstrap_docker_secrets"
        - "bootstrap_secrets_infra"
        - "secrets_infra"

#- name: "Create Registry Root Cert Secret block"
#  block:
#    - name: "Create Registry Root Cert Secret "
#      shell: |
#        kubectl create secret generic {{ Jannah.stages.bootstrap.secrets.root_cert.name }} \
#        --from-file={{ Jannah.stages.bootstrap.secrets.root_cert.key }}={{ Jannah.stages.bootstrap.secrets.root_cert.path }} \
#        --namespace={{ Jannah.global.namespace }};
#      # Do not create if we already have an instance
#      when: (bootstrap_root_cert_sc_create_check['api_found'] == true) and (bootstrap_root_cert_sc_create_check['resources']|length == 0)
#      tags:
#        - "bootstrap_docker_root_cert_secret"
#        - "bootstrap_secrets_infra"
#        - "secrets_infra"
#
#- name: "Create Registry Root Cert Secret block - Default Namespace"
#  block:
#    - name: "Create Registry Root Cert Secret "
#      shell: |
#        kubectl create secret generic {{ Jannah.stages.bootstrap.secrets.root_cert.name }} \
#        --from-file={{ Jannah.stages.bootstrap.secrets.root_cert.key }}={{ Jannah.stages.bootstrap.secrets.root_cert.path }} \
#        --namespace=default;
#      # Do not create if we already have an instance
#      when: (bootstrap_root_cert_sc_create_check_default['api_found'] == true) and (bootstrap_root_cert_sc_create_check_default['resources']|length == 0)
#      tags:
#        - "bootstrap_docker_root_cert_secret"
#        - "bootstrap_secrets_infra"
#        - "secrets_infra"