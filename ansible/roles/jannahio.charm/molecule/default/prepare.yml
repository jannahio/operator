---
- name: Prepare
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: "Create Testing Namespace and Secrets"
      block:
        - name: Import tasks
          include_tasks: '{{ item }}'
          with_fileglob:
            - ../../tasks/namespaces/main.yml
            - ../../tasks/secrets/main.yml
          tags:
            - "bootstrap_jannah_namespace"
      rescue:
        - name: "Build namespaces, secrets exception is thrown"
          ansible.builtin.debug:
            msg: 'Build namespaces, secrets exception is thrown'

        - name: Re-emit failure
          vars:
            failed_task:
              result: '{{ ansible_failed_result }}'
          fail:
            msg: '{{ failed_task }}'

    - name: "ServiceAccount working directory"
      file:
        path: "${MOLECULE_EPHEMERAL_DIRECTORY}/ServiceAccounts/template/"
        state: directory
        mode: 0755
      tags:
        - "secrets_infra"

    - name: "Get the default service account yaml for editing"
      shell: |
        kubectl get serviceaccounts default -o yaml >  ${MOLECULE_EPHEMERAL_DIRECTORY}/ServiceAccounts/template/service_account.yaml
      tags:
        - "bootstrap_get_serviceaccount_file"
        - "secrets_infra"

    - name: "modify the default service account for the namespace to use this secret as an imagePullSecret"
      shell: |
        kubectl patch serviceaccount default -p '{"imagePullSecrets": [{"name": "{{ Jannah.stages.bootstrap.secrets.image_registry.name }}"}]}';
      tags:
        - "bootstrap_patch_serviceaccount_secrets"
        - "secrets_infra"

    - name: "Get the default service account yaml for editing"
      shell: |
        kubectl get serviceaccounts default -o yaml >  ${MOLECULE_EPHEMERAL_DIRECTORY}/ServiceAccounts/template/service_account.yaml
      tags:
        - "bootstrap_get_serviceaccount_file"
        - "secrets_infra"

    - name: "comment out line with resourceVersion"
      ansible.builtin.replace:
        path: ${MOLECULE_EPHEMERAL_DIRECTORY}/ServiceAccounts/template/service_account.yaml
        regexp: 'resourceVersion:'
        replace: '#resourceVersion:'
      tags:
        - "bootstrap_comment_out_resourceVersion"
        - "secrets_infra"


    - name: "Replace the serviceaccount with the new updated file"
      shell: |
        kubectl replace serviceaccount default -f ${MOLECULE_EPHEMERAL_DIRECTORY}/ServiceAccounts/template/service_account.yaml
      tags:
        - "bootstrap_replace_serviceaccount"
        - "secrets_infra"

    - name: "install olm"
      shell: |
        operator-sdk olm install
      tags:
        - "bootstrap_olm_install"
      async: 600
      poll: 5
      register: olm_install_results

    - name: "make bundle"
      environment:
        - DOCKER_USERNAME: "{{ Jannah.stages.bootstrap.build.USERNAME }}"
        - VERSION: "{{ Jannah.stages.bootstrap.build.VERSION }}"
        - BUNDLE_IMG: "{{ Jannah.stages.bootstrap.build.BUNDLE_IMG }}"
        - IMG: "{{ Jannah.stages.bootstrap.build.IMG }}"
        - CATALOG_IMG: "{{ Jannah.stages.bootstrap.build.CATALOG_IMG }}"
      shell: |
        make bundle
      args:
        chdir: "${MOLECULE_PROJECT_DIRECTORY}/../../operators/ansible_based/jannah-operator/"
      tags:
        - "bootstrap_make_bundle"
      async: 600
      poll: 5
      register: bootstrap_make_bundle

    - name: "make bundle-build"
      environment:
        - DOCKER_USERNAME: "{{ Jannah.stages.bootstrap.build.USERNAME }}"
        - VERSION: "{{ Jannah.stages.bootstrap.build.VERSION }}"
        - BUNDLE_IMG: "{{ Jannah.stages.bootstrap.build.BUNDLE_IMG }}"
        - IMG: "{{ Jannah.stages.bootstrap.build.IMG }}"
        - CATALOG_IMG: "{{ Jannah.stages.bootstrap.build.CATALOG_IMG }}"
      shell: |
        make bundle-build;
      args:
        chdir: "${MOLECULE_PROJECT_DIRECTORY}/../../operators/ansible_based/jannah-operator/"
      tags:
        - "bootstrap_make_bundle"
      async: 600
      poll: 5
      register: bootstrap_make_build

    - name: "make docker-build"
      environment:
        - DOCKER_USERNAME: "{{ Jannah.stages.bootstrap.build.USERNAME }}"
        - VERSION: "{{ Jannah.stages.bootstrap.build.VERSION }}"
        - BUNDLE_IMG: "{{ Jannah.stages.bootstrap.build.BUNDLE_IMG }}"
        - IMG: "{{ Jannah.stages.bootstrap.build.IMG }}"
        - CATALOG_IMG: "{{ Jannah.stages.bootstrap.build.CATALOG_IMG }}"
      shell: |
        make docker-build;
      args:
        chdir: "${MOLECULE_PROJECT_DIRECTORY}/../../operators/ansible_based/jannah-operator/"
      tags:
        - "bootstrap_make_bundle"
      async: 600
      poll: 5
      register: bootstrap_make_docker_build

    - name: "make bundle-push"
      environment:
        - DOCKER_USERNAME: "{{ Jannah.stages.bootstrap.build.USERNAME }}"
        - VERSION: "{{ Jannah.stages.bootstrap.build.VERSION }}"
        - BUNDLE_IMG: "{{ Jannah.stages.bootstrap.build.BUNDLE_IMG }}"
        - IMG: "{{ Jannah.stages.bootstrap.build.IMG }}"
        - CATALOG_IMG: "{{ Jannah.stages.bootstrap.build.CATALOG_IMG }}"
      shell: |
        make bundle-push;
      args:
        chdir: "${MOLECULE_PROJECT_DIRECTORY}/../../operators/ansible_based/jannah-operator/"
      tags:
        - "bootstrap_make_bundle"
      async: 600
      poll: 5
      register: bootstrap_make_bundle_push


    - name: "make docker-push"
      environment:
        - DOCKER_USERNAME: "{{ Jannah.stages.bootstrap.build.USERNAME }}"
        - VERSION: "{{ Jannah.stages.bootstrap.build.VERSION }}"
        - BUNDLE_IMG: "{{ Jannah.stages.bootstrap.build.BUNDLE_IMG }}"
        - IMG: "{{ Jannah.stages.bootstrap.build.IMG }}"
        - CATALOG_IMG: "{{ Jannah.stages.bootstrap.build.CATALOG_IMG }}"
      shell: |
        make docker-push;
      args:
        chdir: "${MOLECULE_PROJECT_DIRECTORY}/../../operators/ansible_based/jannah-operator/"
      tags:
        - "bootstrap_make_bundle"
      async: 600
      poll: 5
      register: bootstrap_make_docker_push

    - name: "Build catalog"
      block:
        - name: Import build catalog tasks/
          include_tasks: '{{ item }}'
          with_fileglob:
            - ../../tasks/build_catalog/main.yml
          tags:
            - "bootstrap_catalog"

        - name: Import install_kustomize
          include_tasks: '{{ item }}'
          with_fileglob:
            - ../../tasks/install_kustomize/main.yml
          tags:
            - "bootstrap_kustomize"
            - "bootstrap_get_kustomize"
      rescue:
        - name: "Build catalog exception is thrown"
          ansible.builtin.debug:
            msg: 'Build catalog exception is thrown'

        - name: Re-emit failure
          vars:
            failed_task:
              result: '{{ ansible_failed_result }}'
          fail:
            msg: '{{ failed_task }}'


      ignore_errors: false