---
- name: "Kubernetes Kind cluster tooling"
  block:
    - name: "set_fact kind_cluster_directory"
      ansible.builtin.set_fact:
        kind_cluster_directory: ${MOLECULE_EPHEMERAL_DIRECTORY}/kind/
      tags:
        - "deploy_images"
        - "molecule_create"
        - "operator_e2e"
    - name: "set_fact kind_cluster_kubeconfig"
      ansible.builtin.set_fact:
        kind_cluster_kubeconfig: ${MOLECULE_EPHEMERAL_DIRECTORY}/kind/config
      tags:
        - "deploy_images"
        - "molecule_create"
        - "operator_e2e"
    - name: "set_fact jannah_stages_bootstrap_deploy_destination"
      ansible.builtin.set_fact:
        jannah_stages_bootstrap_deploy_destination: "{{ Jannah.stages.bootstrap.deploy.destination }}"
      tags:
        - "deploy_images"
        - "molecule_create"
        - "operator_e2e"
        - "molecule_create_debug"
    - name: "Install kind 0.18.0 - Darwin(arm64)"
      shell: |
        brew install kind;
      when: ansible_facts['os_family'] == "Darwin"
      async: 600
      poll: 5
      tags:
        - "molecule_create"
        - "operator_e2e"
    - name: "Create MOLECULE_EPHEMERAL_DIRECTORY/kind directory"
      file:
        path: $MOLECULE_EPHEMERAL_DIRECTORY/kind/
        state: directory
        mode: 0755
      tags:
        - "molecule_create"
        - "operator_e2e"
    # - name: "Generate kind_config_arm64.yml"
    #   template:
    #     src: "files/templates/kind_config_arm64.yml"
    #     dest: "${MOLECULE_EPHEMERAL_DIRECTORY}/kind/kind_config_arm64.yml"
    #     backup: yes
    #   when: ansible_facts['os_family'] == "Darwin" and ansible_facts['architecture'] == "arm64"
    #   tags:
    #     - "molecule_create"
    #     - "operator_e2e"
#    - name: "Generate kind_config_amd64.yml"
#      template:
#        src: "files/templates/kind_config_amd64.yml"
#        dest: "${MOLECULE_EPHEMERAL_DIRECTORY}/kind/kind_config_amd64.yml"
#        backup: yes
#      when: ansible_facts['os_family'] == "Darwin" and ansible_facts['architecture'] != "arm64"
#      tags:
#        - "molecule_create"
#        - "operator_e2e"
    # - name: "Create cluster - Darwin(arm64)"
    #   environment:
    #     KUBECONFIG: "${MOLECULE_EPHEMERAL_DIRECTORY}/kind/config"
    #   shell: |
    #     kind create cluster --name "{{ Jannah.stages.bootstrap.deploy.kind.name }}" \
    #     -v 100 --wait {{ Jannah.stages.bootstrap.deploy.kind.wait }};
    #   when: ansible_facts['os_family'] == "Darwin" and ansible_facts['architecture'] == "arm64"
    #   args:
    #     chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/kind/"
    #   async: 1200
    #   poll: 15
    #   tags:
    #     - "molecule_create"
    #     - "operator_e2e"
  # --config "${MOLECULE_EPHEMERAL_DIRECTORY}/kind/kind_config_amd64.yml" \
# Implements https://kind.sigs.k8s.io/docs/user/local-registry/
    - name: "Create kind cluster - with registry - 1. Create registry container unless it already exists"
      environment:
        KUBECONFIG: "${MOLECULE_EPHEMERAL_DIRECTORY}/kind/config"
        reg_name: "{{ Jannah.stages.bootstrap.deploy.helm_values.images.registry.name }}"
        reg_port: "{{ Jannah.stages.bootstrap.deploy.helm_values.images.registry.port }}"
      shell: |
        if [ "$(docker inspect -f '\{\{.State.Running\}\}' "${reg_name}" 2>/dev/null || true)" != 'true' ]; then
          docker run \
            -d --restart=always -p "127.0.0.1:${reg_port}:5000" --name "${reg_name}" \
            registry:2
        fi
      when: ansible_facts['os_family'] == "Darwin" and jannah_stages_bootstrap_deploy_destination == "kind"
      # args:
      #   chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/kind/"
      async: 1200
      poll: 15
      tags:
        - "molecule_create"
        - "operator_e2e"
        - "molecule_create_debug"
# 
# TODO: kind will eventually enable this by default and this patch will      
# be unnecessary.
#
# See:
# https://github.com/kubernetes-sigs/kind/issues/2875
# https://github.com/containerd/containerd/blob/main/docs/cri/config.md#registry-configuration
# See: https://github.com/containerd/containerd/blob/main/docs/hosts.md
    - name: "Create kind cluster - with registry - 2. Create kind cluster with containerd registry config dir enabled"
      environment:
        KUBECONFIG: "${MOLECULE_EPHEMERAL_DIRECTORY}/kind/config"
        reg_name: "{{ Jannah.stages.bootstrap.deploy.helm_values.images.registry.name }}"
        reg_port: "{{ Jannah.stages.bootstrap.deploy.helm_values.images.registry.port }}"
      shell: |
        cat <<EOF | kind create cluster --config=-
        kind: Cluster
        apiVersion: kind.x-k8s.io/v1alpha4
        name: "{{ Jannah.stages.bootstrap.deploy.kind.name }}"
        containerdConfigPatches:
        - |-
          [plugins."io.containerd.grpc.v1.cri".registry]
            config_path = "/etc/containerd/certs.d"
        EOF
      when: ansible_facts['os_family'] == "Darwin" and jannah_stages_bootstrap_deploy_destination == "kind"
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/kind/"
      async: 1200
      poll: 15
      tags:
        - "molecule_create"
        - "operator_e2e"
        - "molecule_create_debug"
    # This is necessary because localhost resolves to loopback addresses that are
    # network-namespace local.
    # In other words: localhost in the container is not localhost on the host.
    #
    # We want a consistent name that works from both ends, so we tell containerd to
    # alias localhost:${reg_port} to the registry container when pulling images    
    - name: "Create kind cluster - with registry - 3. Add the registry config to the nodes"
      environment:
        KUBECONFIG: "${MOLECULE_EPHEMERAL_DIRECTORY}/kind/config"
        REGISTRY_DIR: "/etc/containerd/certs.d/localhost:{{ Jannah.stages.bootstrap.deploy.helm_values.images.registry.port }}"
        reg_name: "{{ Jannah.stages.bootstrap.deploy.helm_values.images.registry.name }}"
        reg_port: "{{ Jannah.stages.bootstrap.deploy.helm_values.images.registry.port }}"
      shell: |
        for node in $(kind get nodes --name "{{ Jannah.stages.bootstrap.deploy.kind.name }}"); do
          docker exec "${node}" mkdir -p "${REGISTRY_DIR}"
          cat <<EOF | docker exec -i "${node}" cp /dev/stdin "${REGISTRY_DIR}/hosts.toml"
        [host."http://${reg_name}:5000"]
        EOF
        done
      when: ansible_facts['os_family'] == "Darwin" and jannah_stages_bootstrap_deploy_destination == "kind"
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/kind/"
      async: 1200
      poll: 15
      tags:
        - "molecule_create"
        - "molecule_create_debug"
        - "operator_e2e"
    # This allows kind to bootstrap the network but ensures they're on the same network
    - name: "Create kind cluster - with registry - 4. Connect the registry to the cluster network if not already connected"
      environment:
        KUBECONFIG: "${MOLECULE_EPHEMERAL_DIRECTORY}/kind/config"
        REGISTRY_DIR: "/etc/containerd/certs.d/localhost:{{ Jannah.stages.bootstrap.deploy.helm_values.images.registry.port }}"
        reg_name: "{{ Jannah.stages.bootstrap.deploy.helm_values.images.registry.name }}"
        reg_port: "{{ Jannah.stages.bootstrap.deploy.helm_values.images.registry.port }}"
      shell: |
        if [ "$(docker inspect -f='\{\{json .NetworkSettings.Networks.kind \}\}' "${reg_name}")" = 'null' ]; then
          docker network connect "kind" "${reg_name}"
        fi
      when: ansible_facts['os_family'] == "Darwin" and jannah_stages_bootstrap_deploy_destination == "kind"
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/kind/"
      async: 1200
      poll: 15
      tags:
        - "molecule_create"
        - "operator_e2e"
        - "molecule_create_debug"
    # https://github.com/kubernetes/enhancements/tree/master/keps/sig-cluster-lifecycle/generic/1755-communicating-a-local-registry
    - name: "Create kind cluster - with registry - 5 A. Create Namespace"
      environment:
        KUBECONFIG: "${MOLECULE_EPHEMERAL_DIRECTORY}/kind/config"
      shell: |   
        kubectl create namespace "{{ Jannah.stages.bootstrap.deploy.helm_values.common.namespace }}";
        exit 0;
      when: ansible_facts['os_family'] == "Darwin" and jannah_stages_bootstrap_deploy_destination == "kind"
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/kind/"
      async: 1200
      poll: 15
      tags:
        - "molecule_create"
        - "operator_e2e"
        - "molecule_create_debug"
    - name: "Create kind cluster - with registry - 5 B. Document the local registry"
      environment:
        KUBECONFIG: "${MOLECULE_EPHEMERAL_DIRECTORY}/kind/config"
        REGISTRY_DIR: "/etc/containerd/certs.d/localhost:{{ Jannah.stages.bootstrap.deploy.helm_values.images.registry.port }}"
        reg_name: "{{ Jannah.stages.bootstrap.deploy.helm_values.images.registry.name }}"
        reg_port: "{{ Jannah.stages.bootstrap.deploy.helm_values.images.registry.port }}"
        reg_namespace: "{{ Jannah.stages.bootstrap.deploy.helm_values.common.namespace }} "
      shell: |   
        cat <<EOF | kubectl apply -f -
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: local-registry-hosting
          namespace: ${reg_namespace}
        data:
          localRegistryHosting.v1: |
            host: "localhost:${reg_port}"
            help: "https://kind.sigs.k8s.io/docs/user/local-registry/"
        EOF
      when: ansible_facts['os_family'] == "Darwin" and jannah_stages_bootstrap_deploy_destination == "kind"
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/kind/"
      async: 1200
      poll: 15
      tags:
        - "molecule_create"
        - "operator_e2e"
        - "molecule_create_debug"
    - name: "kind export kubeconfig to /kind/config - Darwin(amd64)"
      environment:
        KUBECONFIG: "${MOLECULE_EPHEMERAL_DIRECTORY}/kind/config"
      shell: |
        kind export kubeconfig --name {{ Jannah.stages.bootstrap.deploy.kind.name }}
      when: ansible_facts['os_family'] == "Darwin"
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/kind/"
      async: 600
      poll: 5
      tags:
        - "molecule_create"
        - "operator_e2e"
    - name: "kubectl get pods -A"
      environment:
        KUBECONFIG: "${MOLECULE_EPHEMERAL_DIRECTORY}/kind/config"
      shell: |
        kubectl get pods -A
      when: ansible_facts['os_family'] == "Darwin"
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/kind/"
      async: 600
      poll: 5
      tags:
        - "molecule_create"
        - "operator_e2e"
        - "molecule_create_debug"
  rescue:
    - name: "Kubernetes Kind Tooling Exception"
      ansible.builtin.debug:
        msg: 'Kubernetes Kind Tooling Exception'
      register: molecule_create_inline_debug_resources
      tags:
        - "molecule_create"
        - "operator_e2e"
        - "molecule_create_debug"
    - name: Re-emit failure
      vars:
        failed_task:
          result: '{{ ansible_failed_result }}'
      fail:
        msg: '{{ failed_task }}'
      tags:
        - "molecule_create"
        - "operator_e2e"
        - "molecule_create_debug"
  ignore_errors: false
