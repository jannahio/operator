---
- name: "Create Jannah Tasks"
  block:
    - name: "set_fact jannah_stages_bootstrap_deploy_type"
      ansible.builtin.set_fact:
        jannah_stages_bootstrap_deploy_type: "{{ Jannah.stages.bootstrap.deploy.type }}"
      tags:
        - "deploy_images"
        - "molecule_create"
        - "operator_e2e"
    - name: "set_fact jannah_stages_bootstrap_deploy_destination"
      ansible.builtin.set_fact:
        jannah_stages_bootstrap_deploy_destination: "{{ Jannah.stages.bootstrap.deploy.destination }}"
      tags:
        - "deploy_images"
        - "molecule_create"
        - "operator_e2e"
    - name: "set_fact jannah_stages_bootstrap_deploy_os"
      ansible.builtin.set_fact:
        jannah_stages_bootstrap_deploy_os: "{{ Jannah.stages.bootstrap.deploy.os }}"
      tags:
        - "deploy_images"
        - "molecule_create"
        - "operator_e2e"
    - name: "Import Create  docker desktop tasks - Darwin"
      include_tasks: '{{ Create_macos_docker_desktop_task_items }}'
      with_fileglob:
        - macos_docker_desktop.yml
      loop_control:
        loop_var: Create_macos_docker_desktop_task_items
      when: ansible_facts['os_family'] == "Darwin"
      tags:
        - "docker_desktop_infra"
        - "molecule_create"
        - "operator_e2e"
    - name: "Import Create build_base_image tasks - Darwin"
      include_tasks: '{{ Create_build_base_image_task_items }}'
      with_fileglob:
        - build_base_image.yml
      loop_control:
        loop_var: Create_build_base_image_task_items
      when: (
            ansible_facts['os_family'] == "Darwin" 
            and 
              (
                jannah_stages_bootstrap_deploy_destination == "docker-desktop"
              )
            )
      tags:
        - "docker_desktop_infra"
        - "molecule_create"
        - "operator_e2e"
    - name: "Import Create build streamos images tasks - StreamOS"
      include_tasks: '{{ Create_build_streamos_images_task_items }}'
      with_fileglob:
        - build_streamos_images.yml
      loop_control:
        loop_var: Create_build_streamos_images_task_items
      when: (
            ansible_facts['os_family'] == "Darwin" 
            and
            jannah_stages_bootstrap_deploy_os == "streamos"
            and 
              (
                jannah_stages_bootstrap_deploy_destination == "docker-desktop"
                or 
                jannah_stages_bootstrap_deploy_destination == "kind"
              )
            )
      tags:
        - "docker_desktop_infra"
        - "molecule_create"
        - "operator_e2e"
    - name: "Import Create build ubuntu images tasks"
      include_tasks: '{{ Create_build_ubuntu_images_task_items }}'
      with_fileglob:
        - build_ubuntu_images.yml
      loop_control:
        loop_var: Create_build_ubuntu_images_task_items
      when: (
            ansible_facts['os_family'] == "Darwin" 
            and
            jannah_stages_bootstrap_deploy_os == "ubuntu"
            and  
              (
                jannah_stages_bootstrap_deploy_destination == "docker-desktop"
                or 
                jannah_stages_bootstrap_deploy_destination == "kind"
              )
            )
      tags:
        - "docker_desktop_infra"
        - "molecule_create"
        - "operator_e2e"
  rescue:
    - name: "Create Jannah Tasks Exception"
      ansible.builtin.debug:
        msg: 'Create Jannah Tasks Exception'
      register: Create_jannah_tasks_debug_resources
    - debug: var=Create_jannah_tasks_debug_resources
      tags:
        - "docker_desktop_infra"
        - "molecule_create"
        - "operator_e2e"
    - name: Re-emit failure
      vars:
        failed_task:
          result: '{{ ansible_failed_result }}'
      fail:
        msg: '{{ failed_task }}'
      tags:
        - "docker_desktop_infra"
        - "molecule_create"
        - "operator_e2e"
  ignore_errors: false
