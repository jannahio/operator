---
- name: "Builds ubuntu middleware docker images for use in Helm Chart"
  block:
    - name: "set_fact jannah_stages_bootstrap_deploy_destination"
      ansible.builtin.set_fact:
        jannah_stages_bootstrap_deploy_destination: "{{ Jannah.stages.bootstrap.deploy.destination }}"
      tags:
        - "deploy_images"
        - "molecule_create"
        - "operator_e2e"
    - name: "set_fact jannah_stages_bootstrap_deploy_os"
      ansible.builtin.set_fact:
        jannah_stages_bootstrap_deploy_os: "{{ Jannah.stages.bootstrap.deploy.os }}"
      tags:
        - "build_images"
        - "build_frontend_images"
        - "molecule_create"
        - "operator_e2e"
    - name: "Create /images/ubuntu/middleware directory"
      file:
        path: "${MOLECULE_EPHEMERAL_DIRECTORY}/images/ubuntu/middleware"
        state: directory
        mode: 0755
      tags:
        - "build_images"
        - "build_middleware_images"
        - "molecule_create"
        - "operator_e2e"
    - name: "Git checkout repository"
      ansible.builtin.git:
        repo: "{{ Jannah.stages.bootstrap.deploy.helm_values.images.middleware.github.repo }}" 
        dest: "${MOLECULE_EPHEMERAL_DIRECTORY}/images/ubuntu/middleware"
        version: "{{ Jannah.stages.bootstrap.deploy.helm_values.images.middleware.github.branch }}" 
      tags:
        - "build_images"
        - "build_middleware_images"
        - "molecule_create"
        - "operator_e2e"
    - name: "Generate middleware/ubuntu.middleware.Dockerfile"
      template:
        src: "files/templates/ubuntu/middleware/ubuntu.middleware.Dockerfile"
        dest: "${MOLECULE_EPHEMERAL_DIRECTORY}/images/ubuntu/middleware/jannah_graphql/ubuntu.middleware.Dockerfile"
      tags:
        - "build_images"
        - "molecule_create"
        - "operator_e2e"
    - name: "Generate ubuntu/ubuntu.middleware.Dockerfile.dockerignore"
      template:
        src: "files/templates/ubuntu/middleware/ubuntu.middleware.Dockerfile.dockerignore"
        dest: "${MOLECULE_EPHEMERAL_DIRECTORY}/images/ubuntu/middleware/jannah_graphql/ubuntu.middleware.Dockerfile.dockerignore"
      tags:
        - "build_images"
        - "molecule_create"
        - "operator_e2e"
    - name: "Build Ubuntu middleware image - arm64 docker-desktop"
      shell: |
        docker buildx build \
          --builder=kube \
          -t \
          {{ Jannah.stages.bootstrap.deploy.helm_values.images.middleware.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.arm }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.ubuntu }}:{{ Jannah.stages.bootstrap.deploy.helm_values.common.tag }} \
          --platform=linux/arm64 \
          -f ubuntu.middleware.Dockerfile \
          --load .
      when: (
               ansible_facts['architecture'] != "x86_64" 
               and 
               jannah_stages_bootstrap_deploy_os == "ubuntu"
               and
               jannah_stages_bootstrap_deploy_destination == "docker-desktop"
            )
      async: 9800
      poll: 5
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/images/ubuntu/middleware/jannah_graphql"
      tags:
        - "build_images"
        - "molecule_create"
        - "operator_e2e"
    - name: "Build Ubuntu middleware image - arm64 kind cluster"
      shell: |
        docker build \
          -t \
          {{ Jannah.stages.bootstrap.deploy.helm_values.images.middleware.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.arm }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.ubuntu }}:{{ Jannah.stages.bootstrap.deploy.helm_values.common.tag }} \
          -f ubuntu.middleware.Dockerfile .;
      when: (
               ansible_facts['architecture'] != "x86_64" 
               and 
               jannah_stages_bootstrap_deploy_os == "ubuntu"
               and
               jannah_stages_bootstrap_deploy_destination == "kind"
            )
      async: 9800
      poll: 5
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/images/ubuntu/middleware/jannah_graphql"
      tags:
        - "build_images"
        - "molecule_create"
        - "operator_e2e"
    - name: "Build Ubuntu middleware image - amd64  docker-desktop"
      shell: |
        docker buildx build \
          --builder=kube \
          -t \
          {{ Jannah.stages.bootstrap.deploy.helm_values.images.middleware.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.amd }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.ubuntu }}:{{ Jannah.stages.bootstrap.deploy.helm_values.common.tag }} \
          --platform=linux/amd64 \
          -f ubuntu.middleware.Dockerfile \
          --load .
      when: ( 
              ansible_facts['architecture'] == "x86_64" 
              and 
              jannah_stages_bootstrap_deploy_os == "ubuntu"
              and
              jannah_stages_bootstrap_deploy_destination == "docker-desktop"
            )
      async: 9800
      poll: 5
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/images/ubuntu/middleware/jannah_graphql"
      tags:
        - "build_images"
        - "molecule_create"
        - "operator_e2e"
    - name: "Build Ubuntu middleware image - amd64  kind cluster"
      shell: |
        docker build \
          -t \
          {{ Jannah.stages.bootstrap.deploy.helm_values.images.middleware.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.amd }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.ubuntu }}:{{ Jannah.stages.bootstrap.deploy.helm_values.common.tag }} \
          -f ubuntu.middleware.Dockerfile .;
      when: ( 
              ansible_facts['architecture'] == "x86_64" 
              and 
              jannah_stages_bootstrap_deploy_os == "ubuntu"
              and
              jannah_stages_bootstrap_deploy_destination == "kind"
            )
      async: 9800
      poll: 5
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/images/ubuntu/middleware/jannah_graphql"
      tags:
        - "build_images"
        - "molecule_create"
        - "operator_e2e"
  rescue:
    - name: "Builds Ubuntu Middleware Docker Images Exception"
      ansible.builtin.debug:
        msg: 'Builds Ubuntu Middleware Docker Images Exception'
      tags:
        - "build_images"
        - "molecule_create"
        - "operator_e2e"
    - name: Re-emit failure
      vars:
        failed_task:
          result: '{{ ansible_failed_result }}'
      fail:
        msg: '{{ failed_task }}'
      tags:
        - "build_images"
        - "build_ubuntu_images"
        - "molecule_create"
        - "operator_e2e"
  ignore_errors: false
