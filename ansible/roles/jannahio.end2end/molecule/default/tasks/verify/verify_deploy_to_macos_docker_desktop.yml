---
- name: "Verify Deploy Operator to MacOs Docker Desktop"
  block:
    - name: "set_fact jannah_stages_bootstrap_deploy_type"
      ansible.builtin.set_fact:
        jannah_stages_bootstrap_deploy_type: "{{ Jannah.stages.bootstrap.deploy.type }}"
      tags:
        - "molecule_verify"
        - "operator_e2e"
    - name: "set_fact jannah_stages_bootstrap_deploy_destination"
      ansible.builtin.set_fact:
        jannah_stages_bootstrap_deploy_destination: "{{ Jannah.stages.bootstrap.deploy.destination }}"
      tags:
        - "molecule_verify"
        - "operator_e2e"
    - name: "set_fact jannah_stages_bootstrap_deploy_os"
      ansible.builtin.set_fact:
        jannah_stages_bootstrap_deploy_os: "{{ Jannah.stages.bootstrap.deploy.os }}"
      tags:
        - "molecule_verify"
        - "operator_e2e"
    - name: "set_fact jannah_stages_bootstrap_deploy_mode"
      ansible.builtin.set_fact:
        jannah_stages_bootstrap_deploy_mode: "{{ Jannah.stages.bootstrap.deploy.mode }}"
      tags:
        - "molecule_verify"
        - "operator_e2e"
    - name: "Verify kubeflow - docker-desktop"
      shell: |
        kubectl get pods \
        -n "{{ Jannah.stages.bootstrap.deploy.dependencies.kubeflow.namespace }}"
      when: jannah_stages_bootstrap_deploy_destination == "docker-desktop"
      register: query_to_verify_kubeflow_pods_result_docker_desktop
      tags:
        - "molecule_verify"
        - "operator_e2e"
    - name: "Verify kubeflow - kind-cluster"
      environment:
        - KUBECONFIG: "{{ Jannah.global.ansible.working_dir }}/tmp/EPHEMERAL/kind/config"
      shell: |
        kubectl get pods \
        -n "{{ Jannah.stages.bootstrap.deploy.dependencies.kubeflow.namespace }}"
      when: jannah_stages_bootstrap_deploy_destination == "kind"
      register: query_to_verify_kubeflow_pods_result_kind_cluster
      tags:
        - "molecule_verify"
        - "operator_e2e"
    - name: "Verify Deployed Jannah Operator - docker-desktop"
      shell: |
        kubectl get pods \
        -n "{{ Jannah.stages.bootstrap.deploy.helm_values.common.namespace }}";
      when: jannah_stages_bootstrap_deploy_destination == "docker-desktop"
      register: query_to_verify_jannah_pods_result_docker_desktop
      tags:
        - "molecule_verify"
        - "operator_e2e"
    - name: "Verify Deployed Jannah Operator - kind-cluster"
      environment:
        - KUBECONFIG: "{{ Jannah.global.ansible.working_dir }}/tmp/EPHEMERAL/kind/config"
      shell: |
        kubectl get pods \
        -n "{{ Jannah.stages.bootstrap.deploy.helm_values.common.namespace }}";
      when: jannah_stages_bootstrap_deploy_destination == "kind"
      register: query_to_verify_jannah_pods_result_kind_cluster
      tags:
        - "molecule_verify"
        - "operator_e2e"
    # # if deploy mode is dev, native Jannah services (jannah-frontend, jannah-middleware) are deployed in local containers  
    # - name: "Docker logs Jannah middleware arm64/ubuntu image in dev (container) mode"
    #   shell: |
    #     docker logs \
    #     {{ Jannah.stages.bootstrap.deploy.helm_values.images.middleware.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.arm }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.ubuntu }};
    #   when: (
    #         ansible_facts['architecture'] != "x86_64" 
    #         and 
    #         jannah_stages_bootstrap_deploy_mode == "dev"
    #         and
    #         ajannah_stages_bootstrap_deploy_os == "ubuntu"
    #         )
    #   async: 600
    #   poll: 5
    #   tags:
    #     - "verify_images"
    #     - "molecule_verify"
    #     - "operator_e2e"
    # - name: "Docker logs Jannah middleware amd64/ubuntu image in dev (container) mode"
    #   shell: |
    #     docker logs \
    #     {{ Jannah.stages.bootstrap.deploy.helm_values.images.middleware.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.amd }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.ubuntu }};
    #   when: (
    #         ansible_facts['architecture'] == "x86_64" 
    #         and 
    #         jannah_stages_bootstrap_deploy_mode == "dev"
    #         and
    #         ajannah_stages_bootstrap_deploy_os == "ubuntu"
    #         )
    #   async: 600
    #   poll: 5
    #   tags:
    #     - "verify_images"
    #     - "molecule_verify"
    #     - "operator_e2e"
    # - name: "Docker logs Jannah middleware arm64/streamos image in dev (container) mode"
    #   shell: |
    #     docker logs \
    #     {{ Jannah.stages.bootstrap.deploy.helm_values.images.middleware.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.arm }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.streamos }};
    #   when: (
    #         ansible_facts['architecture'] != "x86_64" 
    #         and 
    #         jannah_stages_bootstrap_deploy_mode == "dev"
    #         and
    #         ajannah_stages_bootstrap_deploy_os == "streamos"
    #         )
    #   async: 600
    #   poll: 5
    #   tags:
    #     - "verify_images"
    #     - "molecule_verify"
    #     - "operator_e2e"
    # - name: "Docker logs Jannah middleware amd64/streamos image in dev (container) mode"
    #   shell: |
    #     docker logs \
    #     {{ Jannah.stages.bootstrap.deploy.helm_values.images.middleware.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.amd }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.streamos }};
    #   when: (
    #         ansible_facts['architecture'] == "x86_64" 
    #         and 
    #         jannah_stages_bootstrap_deploy_mode == "dev"
    #         and
    #         ajannah_stages_bootstrap_deploy_os == "streamos"
    #         )
    #   async: 600
    #   poll: 5
    #   tags:
    #     - "verify_images"
    #     - "molecule_verify"
    #     - "operator_e2e"
    # - name: "Docker logs Jannah frontend arm64/ubuntu image in dev (container) mode"
    #   shell: |
    #     docker logs \
    #     {{ Jannah.stages.bootstrap.deploy.helm_values.images.frontend.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.arm }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.ubuntu }};
    #   when: (
    #         ansible_facts['architecture'] != "x86_64" 
    #         and 
    #         jannah_stages_bootstrap_deploy_mode == "dev"
    #         and
    #         ajannah_stages_bootstrap_deploy_os == "ubuntu"
    #         )
    #   async: 600
    #   poll: 5
    #   tags:
    #     - "verify_images"
    #     - "build_frontend_images"
    #     - "molecule_verify"
    #     - "operator_e2e"
    # - name: "Docker logs Jannah frontend amd64/ubuntu image in dev (container) mode"
    #   shell: |
    #     docker logs \
    #     {{ Jannah.stages.bootstrap.deploy.helm_values.images.frontend.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.amd }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.ubuntu }};
    #   when: (
    #         ansible_facts['architecture'] != "x86_64" 
    #         and 
    #         jannah_stages_bootstrap_deploy_mode == "dev"
    #         and
    #         ajannah_stages_bootstrap_deploy_os == "ubuntu"
    #         )
    #   async: 600
    #   poll: 5
    #   tags:
    #     - "verify_images"
    #     - "build_frontend_images"
    #     - "molecule_verify"
    #     - "operator_e2e"
    # - name: "Docker run Jannah frontend amd64/streamos image in dev (container) mode"
    #   shell: |
    #     docker logs \
    #     {{ Jannah.stages.bootstrap.deploy.helm_values.images.frontend.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.amd }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.streamos }};
    #   when: (
    #         ansible_facts['architecture'] == "x86_64" 
    #         and 
    #         jannah_stages_bootstrap_deploy_mode == "dev"
    #         and
    #         ajannah_stages_bootstrap_deploy_os == "streamos"
    #         )
    #   async: 600
    #   poll: 5
    #   tags:
    #     - "verify_images"
    #     - "build_frontend_images"
    #     - "molecule_verify"
    #     - "operator_e2e"
    # - name: "Docker logs Jannah frontend arm64/streamos image in dev (container) mode"
    #   shell: |
    #     docker logs \
    #     {{ Jannah.stages.bootstrap.deploy.helm_values.images.frontend.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.arm }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.streamos }};
    #   when: (
    #         ansible_facts['architecture'] != "x86_64" 
    #         and 
    #         jannah_stages_bootstrap_deploy_mode == "dev"
    #         and
    #         ajannah_stages_bootstrap_deploy_os == "streamos"
    #         )
    #   async: 600
    #   poll: 5
    #   args:
    #     chdir: "{{ Jannah.global.ansible.working_dir }}/tmp/EPHEMERAL/images/streamos/frontend/web/JannahIonic/"
    #   tags:
    #     - "verify_images"
    #     - "build_frontend_images"
    #     - "molecule_verify"
    #     - "operator_e2e"
    - name: "query_to_verify_kubeflow_pods_result_docker_desktop"
      debug: var=query_to_verify_kubeflow_pods_result_docker_desktop
      when: jannah_stages_bootstrap_deploy_destination == "docker-desktop"
      tags:
        - "molecule_verify"
        - "operator_e2e"
    - name: "query_to_verify_kubeflow_pods_result_kind_cluster"
      debug: var=query_to_verify_kubeflow_pods_result_kind_cluster
      when: jannah_stages_bootstrap_deploy_destination == "kind"
      tags:
        - "molecule_verify"
        - "operator_e2e"
    - name: "query_to_verify_jannah_pods_result_docker_desktop"
      debug: var=query_to_verify_jannah_pods_result_docker_desktop
      when: jannah_stages_bootstrap_deploy_destination == "docker-desktop"
      tags:
        - "molecule_verify"
        - "operator_e2e"
    - name: "query_to_verify_jannah_pods_result_kind_cluster"
      debug: var=query_to_verify_jannah_pods_result_kind_cluster
      when: jannah_stages_bootstrap_deploy_destination == "kind"
      tags:
        - "molecule_verify"
        - "operator_e2e"
    - name: "Assert non empty result list for query_to_verify_jannah_pods_result_docker_desktop"
      assert:
        that:
          - query_to_verify_jannah_pods_result_docker_desktop['stdout_lines'] | length >= 3
      when: jannah_stages_bootstrap_deploy_destination == "docker-desktop"
      tags:
        - "molecule_verify"
        - "operator_e2e"
    - name: "Assert non empty result list for query_to_verify_jannah_pods_result_kind_cluster"
      assert:
        that:
          - query_to_verify_jannah_pods_result_kind_cluster['stdout_lines'] | length >= 3
      when: jannah_stages_bootstrap_deploy_destination == "kind"
      tags:
        - "molecule_verify"
        - "operator_e2e"
    - name: "Assert non empty result list for query_to_verify_kubeflow_pods_result_docker_desktop"
      assert:
        that:
          - query_to_verify_kubeflow_pods_result_docker_desktop['stdout_lines'] | length >= 3
      when: jannah_stages_bootstrap_deploy_destination == "docker-desktop" 
      tags:
        - "molecule_verify"
        - "operator_e2e"
    - name: "Assert non empty result list for query_to_verify_kubeflow_pods_result_kind_cluster"
      assert:
        that:
          - query_to_verify_kubeflow_pods_result_kind_cluster['stdout_lines'] | length >= 3
      when: jannah_stages_bootstrap_deploy_destination == "kind" 
      tags:
        - "molecule_verify"
        - "operator_e2e"  
  rescue:
    - name: "Verify  Operator MacOs Docker Desktop, Kind Cluster Exception"
      ansible.builtin.debug:
        msg: 'Verify Operator MacOs Docker Desktop, Kind Cluster Exception'
      tags:
        - "molecule_verify"
        - "operator_e2e"
    - name: "Re-emit failure"
      vars:
        failed_task:
          result: '{{ ansible_failed_result }}'
      fail:
        msg: '{{ failed_task }}'
      tags:
        - "molecule_verify"
        - "operator_e2e"
  ignore_errors: false
