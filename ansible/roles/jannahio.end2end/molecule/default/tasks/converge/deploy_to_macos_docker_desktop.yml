---
# # while ! ${MOLECULE_EPHEMERAL_DIRECTORY}/install_kustomize/kustomize build example | awk '!/well-defined/' | kubectl apply -f -; do echo "Retrying to apply resources"; sleep 10; done;
- name: "Deploy Operator to MacOs Docker Desktop"
  block:
    - name: "set_fact jannah_stages_bootstrap_deploy_type"
      ansible.builtin.set_fact:
        jannah_stages_bootstrap_deploy_type: "{{ Jannah.stages.bootstrap.deploy.type }}"
      tags:
        - "deploy_images"
        - "molecule_converge"
        - "operator_e2e"
    - name: "set_fact jannah_stages_bootstrap_deploy_destination"
      ansible.builtin.set_fact:
        jannah_stages_bootstrap_deploy_destination: "{{ Jannah.stages.bootstrap.deploy.destination }}"
      tags:
        - "deploy_images"
        - "molecule_converge"
        - "operator_e2e"
    - name: "Kubeflow install (standalone deployment) kind cluster scoped-resources"
      environment:
        - PIPELINE_VERSION: "2.0.1"
        - KUBECONFIG: "${MOLECULE_EPHEMERAL_DIRECTORY}/kind/config"
      shell: |
        kubectl apply -k \
        "github.com/kubeflow/pipelines/manifests/kustomize/cluster-scoped-resources?ref=$PIPELINE_VERSION";
      when: (
             (
              jannah_stages_bootstrap_deploy_type == "standalone"
              or
              jannah_stages_bootstrap_deploy_type == "local"
             ) 
            and
            jannah_stages_bootstrap_deploy_destination == "kind"
          )
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/kind/"
      tags:
        - "docker_desktop_infra"
        - "molecule_converge"
        - "operator_e2e"
    - name: "Kubeflow install (standalone deployment) docker-desktop cluster scoped-resources"
      environment:
        - PIPELINE_VERSION: "2.0.1"
      shell: |
        kubectl apply -k \
        "github.com/kubeflow/pipelines/manifests/kustomize/cluster-scoped-resources?ref=$PIPELINE_VERSION";
      when: (
        (
        jannah_stages_bootstrap_deploy_type == "standalone"
        or
        jannah_stages_bootstrap_deploy_type == "local"
        )
        and
        jannah_stages_bootstrap_deploy_destination == "docker-desktop"
        )
      tags:
        - "docker_desktop_infra"
        - "molecule_converge"
        - "operator_e2e"
    - name: "Kubeflow install (standalone deployment) kind cluster - wait for crd/applications.app.k8s.io"
      environment:
        - PIPELINE_VERSION: "2.0.1"
        - KUBECONFIG: "${MOLECULE_EPHEMERAL_DIRECTORY}/kind/config"
      shell: |
        kubectl wait --for condition=established --timeout=60s crd/applications.app.k8s.io;
        exit 0;
      when: (
        (
        jannah_stages_bootstrap_deploy_type == "standalone"
        or
        jannah_stages_bootstrap_deploy_type == "local"
        )
        and
        jannah_stages_bootstrap_deploy_destination == "kind"
        )
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/kind/"
      tags:
        - "docker_desktop_infra"
        - "molecule_converge"
        - "operator_e2e"
    - name: "Kubeflow install (standalone deployment) docker-desktop cluster - wait for crd/applications.app.k8s.io"
      environment:
        - PIPELINE_VERSION: "2.0.1"
      shell: |
        kubectl wait --for condition=established --timeout=60s crd/applications.app.k8s.io;
        exit 0;
      when: (
        (
        jannah_stages_bootstrap_deploy_type == "standalone"
        or
        jannah_stages_bootstrap_deploy_type == "local"
        )
        and
        jannah_stages_bootstrap_deploy_destination == "docker-desktop"
        )
      tags:
        - "docker_desktop_infra"
        - "molecule_converge"
        - "operator_e2e"
    - name: "Kubeflow install (standalone deployment) - kind - dev?ref"
      environment:
        - PIPELINE_VERSION: "2.0.1"
        - KUBECONFIG: "${MOLECULE_EPHEMERAL_DIRECTORY}/kind/config"
      shell: |
        kubectl apply -k "github.com/kubeflow/pipelines/manifests/kustomize/env/dev?ref=$PIPELINE_VERSION";
      when: jannah_stages_bootstrap_deploy_type == "standalone" and jannah_stages_bootstrap_deploy_destination == "kind"
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/kind/"
      tags:
        - "docker_desktop_infra"
        - "molecule_converge"
        - "operator_e2e"
    - name: "Kubeflow install (standalone deployment) - docker-desktop - dev?ref"
      environment:
        - PIPELINE_VERSION: "2.0.1"
      shell: |
        kubectl apply -k "github.com/kubeflow/pipelines/manifests/kustomize/env/dev?ref=$PIPELINE_VERSION";
      when: jannah_stages_bootstrap_deploy_type == "standalone" and jannah_stages_bootstrap_deploy_destination == "docker-desktop"
      tags:
        - "docker_desktop_infra"
        - "molecule_converge"
        - "operator_e2e"
    - name: "Kubeflow install (local deployment) - kind - platform-agnostic-pns"
      environment:
        - PIPELINE_VERSION: "2.0.1"
        - KUBECONFIG: "${MOLECULE_EPHEMERAL_DIRECTORY}/kind/config"
      shell: |
        kubectl apply -k "github.com/kubeflow/pipelines/manifests/kustomize/env/platform-agnostic-pns?ref=$PIPELINE_VERSION"
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/kind/"
      when: jannah_stages_bootstrap_deploy_type == "local" and jannah_stages_bootstrap_deploy_destination == "kind"
      tags:
        - "docker_desktop_infra"
        - "molecule_converge"
        - "operator_e2e"
    - name: "Kubeflow install (local deployment) - docker-desktop - platform-agnostic-pns"
      environment:
        - PIPELINE_VERSION: "2.0.1"
      shell: |
        kubectl apply -k "github.com/kubeflow/pipelines/manifests/kustomize/env/platform-agnostic-pns?ref=$PIPELINE_VERSION"
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/kind/"
      when: jannah_stages_bootstrap_deploy_type == "local" and jannah_stages_bootstrap_deploy_destination == "docker-desktop"
      tags:
        - "docker_desktop_infra"
        - "molecule_converge"
        - "operator_e2e"
    - name: "Create kubeflow download directory"
      file:
        path: "${MOLECULE_EPHEMERAL_DIRECTORY}/kubeflow/manifests"
        state: directory
        mode: 0755
      when: jannah_stages_bootstrap_deploy_type == "full"
      tags:
        - "docker_desktop_infra"
        - "molecule_prepare"
        - "operator_e2e"
    - name: "Read-write git checkout kubeflow/manifests.git"
      ansible.builtin.git:
        repo: "https://github.com/kubeflow/manifests.git"
        dest: "${MOLECULE_EPHEMERAL_DIRECTORY}/kubeflow/manifests"
      when: jannah_stages_bootstrap_deploy_type == "full"
      tags:
        - "docker_desktop_infra"
        - "molecule_prepare"
        - "operator_e2e"
    - name: "set_fact kubeconfig_path"
      ansible.builtin.set_fact:
        kubeconfig_path: "${MOLECULE_EPHEMERAL_DIRECTORY}/kind/config"
      tags:
        - "deploy_images"
        - "molecule_converge"
        - "operator_e2e"
    - name: "kind export kubeconfig to /kubeflow/config - Darwin(amd64)"
      shell: |
        KUBECONFIG=config kind export kubeconfig --name {{ Jannah.stages.bootstrap.deploy.kind.name }}
      when: jannah_stages_bootstrap_deploy_type == "full" and jannah_stages_bootstrap_deploy_destination == "kind"
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/kubeflow/"
      async: 600
      poll: 5
      tags:
        - "molecule_create"
        - "operator_e2e"
    - name: "Kubeflow install (full deployment to kind cluster)"
      shell: |
        export KUBECONFIG=../config; 
        while ! ${MOLECULE_EPHEMERAL_DIRECTORY}/install_kustomize/kustomize build example | awk '!/well-defined/' | kubectl apply -f -; do echo "Retrying to apply resources"; sleep 10; done;
      when: jannah_stages_bootstrap_deploy_type == "full" and jannah_stages_bootstrap_deploy_destination == "kind"
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/kubeflow/manifests"
      tags:
        - "docker_desktop_infra"
        - "molecule_converge"
        - "operator_e2e"
    - name: "Kubeflow install (full deployment to docker-desktop)"
      shell: |
        while ! ${MOLECULE_EPHEMERAL_DIRECTORY}/install_kustomize/kustomize build example | awk '!/well-defined/' | kubectl apply -f -; do echo "Retrying to apply resources"; sleep 10; done;
      when: jannah_stages_bootstrap_deploy_type == "full" and jannah_stages_bootstrap_deploy_destination == "docker-desktop"
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/kubeflow/manifests"
      tags:
        - "docker_desktop_infra"
        - "molecule_converge"
        - "operator_e2e"
    #    - name: "kubectl port-forward svc/istio-ingressgateway -n istio-system 8080:80"
    #      shell: |
    #        kubectl port-forward svc/istio-ingressgateway -n istio-system 8080:80;
    #      tags:
    #        - "docker_desktop_infra"
    #        - "deploy_images"
    #        - "molecule_converge"
    #        - "operator_e2e"
    - name: "Docker run jallohmediabuild/jannah-ubuntu-middleware-arm64"
      shell: |
        docker run --name jannah-ubuntu-middleware-arm64 -d jallohmediabuild/jannah-ubuntu-middleware-arm64:v0.0.1;
      when: ansible_facts['architecture'] != "x86_64" and jannah_stages_bootstrap_deploy_destination == "docker-desktop"
      async: 600
      poll: 5
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/images/ubuntu/middleware/jannah_graphql"
      tags:
        - "deploy_images"
        - "molecule_converge"
        - "operator_e2e"
    - name: "Docker run jallohmediabuild/jannah-ubuntu-middleware-amd64"
      shell: |
        docker run --name jannah-ubuntu-middleware-amd64 -d jallohmediabuild/jannah-ubuntu-middleware-amd64:v0.0.1;
      when: ansible_facts['architecture'] == "x86_64" and jannah_stages_bootstrap_deploy_destination == "docker-desktop"
      async: 600
      poll: 5
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/images/ubuntu/middleware/jannah_graphql"
      tags:
        - "deploy_images"
        - "molecule_converge"
        - "operator_e2e"
    - name: "Docker run jallohmediabuild/jannah-streamos-middleware-arm64"
      shell: |
        docker run --name jannah-streamos-middleware-arm64 -d jallohmediabuild/jannah-streamos-middleware-arm64:v0.0.1;
      when: ansible_facts['architecture'] != "x86_64" and jannah_stages_bootstrap_deploy_destination == "docker-desktop"
      async: 600
      poll: 5
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/images/streamos/middleware/jannah_graphql"
      tags:
        - "deploy_images"
        - "molecule_converge"
        - "operator_e2e"
    - name: "Docker run jallohmediabuild/jannah-streamos-middleware-amd64"
      shell: |
        docker run --name jannah-streamos-middleware-amd64 -d jallohmediabuild/jannah-streamos-middleware-amd64:v0.0.1;
      when: ansible_facts['architecture'] == "x86_64" and jannah_stages_bootstrap_deploy_destination == "docker-desktop"
      async: 600
      poll: 5
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/images/streamos/middleware/jannah_graphql"
      tags:
        - "deploy_images"
        - "molecule_converge"
        - "operator_e2e"
    - name: "Docker Run jallohmediabuild/jannah-ubuntu-frontend-web-arm64"
      shell: |
        docker run --name jannah-ubuntu-frontend-web-arm64 -d jallohmediabuild/jannah-ubuntu-frontend-web-arm64:v0.0.1;
      when: ansible_facts['architecture'] != "x86_64" and jannah_stages_bootstrap_deploy_destination == "docker-desktop"
      async: 600
      poll: 5
      tags:
        - "deploy_images"
        - "build_frontend_images"
        - "molecule_cleanup"
        - "operator_e2e"
    - name: "Docker run jallohmediabuild/jannah-ubuntu-frontend-web-amd64"
      shell: |
        docker run --name jannah-ubuntu-frontend-web-amd64 -d jallohmediabuild/jannah-ubuntu-frontend-web-amd64:v0.0.1;
      when: ansible_facts['architecture'] == "x86_64" and jannah_stages_bootstrap_deploy_destination == "docker-desktop"
      async: 600
      poll: 5
      tags:
        - "deploy_images"
        - "build_frontend_images"
        - "molecule_cleanup"
        - "operator_e2e"
    - name: "Docker run jallohmediabuild/jannah-streamos-frontend-web-arm64"
      shell: |
        docker run --name jannah-streamos-frontend-web-arm64 -d jallohmediabuild/jannah-streamos-frontend-web-arm64:v0.0.1;
      when: ansible_facts['architecture'] != "x86_64" and jannah_stages_bootstrap_deploy_destination == "docker-desktop"
      async: 600
      poll: 5
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/images/streamos/frontend/web/JannahIonic/"
      tags:
        - "deploy_images"
        - "build_frontend_images"
        - "molecule_cleanup"
        - "operator_e2e"
    - name: "Docker run jallohmediabuild/jannah-streamos-frontend-web-amd64"
      shell: |
        docker run --name jannah-streamos-frontend-web-amd64 -d jallohmediabuild/jannah-streamos-frontend-web-amd64:v0.0.1;
      when: ansible_facts['architecture'] == "x86_64" and jannah_stages_bootstrap_deploy_destination == "docker-desktop"
      async: 600
      poll: 5
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/images/streamos/frontend/web/JannahIonic/"
      tags:
        - "deploy_images"
        - "build_frontend_images"
        - "molecule_cleanup"
        - "operator_e2e"
  rescue:
    - name: "Inline Prepare Operator MacOs Docker Desktop Exception"
      ansible.builtin.debug:
        msg: 'Inline Prepare Operator MacOs Docker Desktop Exception'
    - name: Re-emit failure
      vars:
        failed_task:
          result: '{{ ansible_failed_result }}'
      fail:
        msg: '{{ failed_task }}'
      tags:
        - "molecule_converge"
        - "operator_e2e"
  ignore_errors: false
