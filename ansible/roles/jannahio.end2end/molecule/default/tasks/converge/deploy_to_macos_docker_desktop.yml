---
- name: "Deploy Operator to MacOs Docker Desktop"
  block:
    - name: "Kubeflow install"
      shell: |
        while ! ${MOLECULE_EPHEMERAL_DIRECTORY}/install_kustomize/kustomize build example | awk '!/well-defined/' | kubectl apply -f -; do echo "Retrying to apply resources"; sleep 10; done;
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/kubeflow/manifests"
      tags:
        - "docker_desktop_infra"
        - "molecule_converge"
        - "operator_e2e"
    - name: "Docker run jallohmediabuild/jannah-ubuntu-middleware-arm64"
      shell: |
        docker run -d jallohmediabuild/jannah-ubuntu-middleware-arm64:v0.0.1;
      when: ansible_facts['architecture'] != "x86_64"
      async: 600
      poll: 5
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/images/ubuntu/middleware/jannah_graphql"
      tags:
        - "deploy_images"
        - "molecule_converge"
        - "operator_e2e"
    - name: "Docker run jallohmediabuild/jannah-ubuntu-middleware-amd64"
      shell: |
        docker run -d jallohmediabuild/jannah-ubuntu-middleware-amd64:v0.0.1;
      when: ansible_facts['architecture'] == "x86_64"
      async: 600
      poll: 5
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/images/ubuntu/middleware/jannah_graphql"
      tags:
        - "deploy_images"
        - "molecule_converge"
        - "operator_e2e"
    - name: "Docker run jallohmediabuild/jannah-streamos-middleware-arm64"
      shell: |
        docker run -d jallohmediabuild/jannah-streamos-middleware-arm64:v0.0.1;
      when: ansible_facts['architecture'] != "x86_64"
      async: 600
      poll: 5
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/images/streamos/middleware/jannah_graphql"
      tags:
        - "deploy_images"
        - "molecule_converge"
        - "operator_e2e"
    - name: "Docker run jallohmediabuild/jannah-streamos-middleware-amd64"
      shell: |
        docker run -d jallohmediabuild/jannah-streamos-middleware-amd64:v0.0.1;
      when: ansible_facts['architecture'] == "x86_64"
      async: 600
      poll: 5
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/images/streamos/middleware/jannah_graphql"
      tags:
        - "deploy_images"
        - "molecule_converge"
        - "operator_e2e"
    - name: "Docker Run jallohmediabuild/jannah-ubuntu-frontend-web-arm64"
      shell: |
        docker run -d jallohmediabuild/jannah-ubuntu-frontend-web-arm64:v0.0.1;
      when: ansible_facts['architecture'] != "x86_64"
      async: 600
      poll: 5
      tags:
        - "deploy_images"
        - "build_frontend_images"
        - "molecule_cleanup"
        - "operator_e2e"
    - name: "Docker run jallohmediabuild/jannah-ubuntu-frontend-web-amd64"
      shell: |
        docker run -d jallohmediabuild/jannah-ubuntu-frontend-web-amd64:v0.0.1;
      when: ansible_facts['architecture'] == "x86_64"
      async: 600
      poll: 5
      tags:
        - "deploy_images"
        - "build_frontend_images"
        - "molecule_cleanup"
        - "operator_e2e"
    - name: "Docker run jallohmediabuild/jannah-streamos-frontend-web-arm64"
      shell: |
        docker run -d jallohmediabuild/jannah-streamos-frontend-web-arm64:v0.0.1;
      when: ansible_facts['architecture'] != "x86_64"
      async: 600
      poll: 5
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/images/streamos/frontend/web/JannahIonic/"
      tags:
        - "deploy_images"
        - "build_frontend_images"
        - "molecule_cleanup"
        - "operator_e2e"
        - "dev_debug"
    - name: "Docker run jallohmediabuild/jannah-streamos-frontend-web-amd64"
      shell: |
        docker run -d jallohmediabuild/jannah-streamos-frontend-web-amd64:v0.0.1;
      when: ansible_facts['architecture'] == "x86_64"
      async: 600
      poll: 5
      args:
        chdir: "${MOLECULE_EPHEMERAL_DIRECTORY}/images/streamos/frontend/web/JannahIonic/"
      tags:
        - "deploy_images"
        - "build_frontend_images"
        - "molecule_cleanup"
        - "operator_e2e"
  rescue:
    - name: "Inline Prepare Operator MacOs Docker Desktop Exception"
      ansible.builtin.debug:
        msg: 'Inline Prepare Operator MacOs Docker Desktop Exception'
    - name: Re-emit failure
      vars:
        failed_task:
          result: '{{ ansible_failed_result }}'
      fail:
        msg: '{{ failed_task }}'
      tags:
        - "multipass_infra"
        - "molecule_converge"
        - "operator_e2e"
  ignore_errors: false
