# Default values for jannah-helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

images:
  proxy: 
    name: {{ Jannah.stages.bootstrap.deploy.helm_values.images.proxy.name }}
    repository: localhost:5001/{{ Jannah.stages.bootstrap.deploy.helm_values.images.proxy.name }}
    pullPolicy: {{ Jannah.stages.bootstrap.deploy.helm_values.images.proxy.pullPolicy }}
    # Overrides the image tag whose default is the chart appVersion.
    tag: {{ Jannah.stages.bootstrap.deploy.helm_values.common.tag }}
  boot:
    name:  {{ Jannah.stages.bootstrap.deploy.helm_values.images.boot.name }}
    repository: localhost:5001/{{ Jannah.stages.bootstrap.deploy.helm_values.images.boot.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.amd }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.ubuntu }}
    pullPolicy: {{ Jannah.stages.bootstrap.deploy.helm_values.images.boot.pullPolicy }}
    tag: {{ Jannah.stages.bootstrap.deploy.helm_values.common.tag }}
    port: {{ Jannah.stages.bootstrap.deploy.helm_values.images.boot.port }}
  frontend:
    name:  {{ Jannah.stages.bootstrap.deploy.helm_values.images.frontend.name }}
    repository: localhost:5001/{{ Jannah.stages.bootstrap.deploy.helm_values.images.frontend.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.amd }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.ubuntu }}
    pullPolicy: {{ Jannah.stages.bootstrap.deploy.helm_values.images.frontend.pullPolicy }}
    tag: {{ Jannah.stages.bootstrap.deploy.helm_values.common.tag }}
    port: {{ Jannah.stages.bootstrap.deploy.helm_values.images.frontend.port }}
  middleware:
    name:  {{ Jannah.stages.bootstrap.deploy.helm_values.images.middleware.name }}
    repository: localhost:5001/{{ Jannah.stages.bootstrap.deploy.helm_values.images.middleware.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.amd }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.ubuntu }}
    pullPolicy: {{ Jannah.stages.bootstrap.deploy.helm_values.images.middleware.pullPolicy }}
    tag: {{ Jannah.stages.bootstrap.deploy.helm_values.common.tag }}
    port: {{ Jannah.stages.bootstrap.deploy.helm_values.images.middleware.port }}
  registry:
    name:  {{ Jannah.stages.bootstrap.deploy.helm_values.images.registry.name }}
    repository: localhost:5001/{{ Jannah.stages.bootstrap.deploy.helm_values.images.registry.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.amd }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.ubuntu }}
    pullPolicy: {{ Jannah.stages.bootstrap.deploy.helm_values.images.registry.pullPolicy }}
    tag: {{ Jannah.stages.bootstrap.deploy.helm_values.common.tag }}
    port: {{ Jannah.stages.bootstrap.deploy.helm_values.images.registry.port }}

# imagePullSecrets:
#   - name: {{ Jannah.stages.bootstrap.secrets.registry_cred.name }}
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
