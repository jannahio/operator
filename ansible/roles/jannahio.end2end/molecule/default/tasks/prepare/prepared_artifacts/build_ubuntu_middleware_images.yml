---
- name: "Tag and Push ubuntu middleware docker images for use in Helm Chart"
  block:
    - name: "set_fact jannah_stages_bootstrap_deploy_push_middleware_ubuntu_image"
      ansible.builtin.set_fact:
        jannah_stages_bootstrap_deploy_push_middleware_ubuntu_image: "{{ Jannah.stages.bootstrap.deploy.helm_values.images.middleware.dockerfiles.push }}"
      tags:
        - "prepare_images"
        - "molecule_prepare"
        - "operator_e2e"
    - name: "set_fact jannah_stages_bootstrap_deploy_destination"
      ansible.builtin.set_fact:
        jannah_stages_bootstrap_deploy_destination: "{{ Jannah.stages.bootstrap.deploy.destination }}"
      tags:
        - "deploy_storage"
        - "molecule_prepare"
        - "operator_e2e"
    - name: "Tag Ubuntu middleware image - arm64 kind"
      shell: |
        docker tag \
          {{ Jannah.stages.bootstrap.deploy.helm_values.images.middleware.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.arm }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.ubuntu }}:{{ Jannah.stages.bootstrap.deploy.helm_values.common.tag }} \
          {{ Jannah.stages.bootstrap.deploy.helm_values.common.repository }}/{{ Jannah.stages.bootstrap.deploy.helm_values.images.middleware.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.arm }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.ubuntu }}:{{ Jannah.stages.bootstrap.deploy.helm_values.common.tag }};
      when: (
               ansible_facts['architecture'] != "x86_64" 
            )
      async: 9800
      poll: 5
      args:
        chdir: "{{ Jannah.global.ansible.working_dir }}/tmp/EPHEMERAL/images/ubuntu/middleware/jannah_graphql"
      tags:
        - "prepare_images"
        - "molecule_prepare"
        - "operator_e2e"
    - name: "Load Ubuntu middleware image - arm64 kind cluster"
      shell: |
        kind load docker-image \
          {{ Jannah.stages.bootstrap.deploy.helm_values.common.repository }}/{{ Jannah.stages.bootstrap.deploy.helm_values.images.middleware.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.arm }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.ubuntu }}:{{ Jannah.stages.bootstrap.deploy.helm_values.common.tag }};
      when: (
               ansible_facts['architecture'] != "x86_64"
               and 
               jannah_stages_bootstrap_deploy_destination == "kind"
            )
      async: 9800
      poll: 5
      args:
        chdir: "{{ Jannah.global.ansible.working_dir }}/tmp/EPHEMERAL/images/ubuntu/middleware/jannah_graphql"
      tags:
        - "prepare_images"
        - "molecule_prepare"
        - "operator_e2e"
    - name: "Push Ubuntu middleware image - arm64 kind cluster"
      shell: |
        docker push \
          {{ Jannah.stages.bootstrap.deploy.helm_values.common.repository }}/{{ Jannah.stages.bootstrap.deploy.helm_values.images.middleware.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.arm }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.ubuntu }}:{{ Jannah.stages.bootstrap.deploy.helm_values.common.tag }};
      when: (
               ansible_facts['architecture'] != "x86_64"
               and 
               jannah_stages_bootstrap_deploy_push_middleware_ubuntu_image == True 
            )
      async: 9800
      poll: 5
      args:
        chdir: "{{ Jannah.global.ansible.working_dir }}/tmp/EPHEMERAL/images/ubuntu/middleware/jannah_graphql"
      tags:
        - "prepare_images"
        - "molecule_prepare"
        - "operator_e2e"
    - name: "Tag Ubuntu middleware image - amd64"
      shell: |
        docker tag \
          {{ Jannah.stages.bootstrap.deploy.helm_values.images.middleware.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.amd }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.ubuntu }}:{{ Jannah.stages.bootstrap.deploy.helm_values.common.tag }} \
          {{ Jannah.stages.bootstrap.deploy.helm_values.common.repository }}/{{ Jannah.stages.bootstrap.deploy.helm_values.images.middleware.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.amd }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.ubuntu }}:{{ Jannah.stages.bootstrap.deploy.helm_values.common.tag }};
      when: ( 
              ansible_facts['architecture'] == "x86_64" 
            )
      async: 9800
      poll: 5
      args:
        chdir: "{{ Jannah.global.ansible.working_dir }}/tmp/EPHEMERAL/images/ubuntu/middleware/jannah_graphql"
      tags:
        - "prepare_images"
        - "molecule_prepare"
        - "operator_e2e"
    - name: "Load Ubuntu middleware image - amd64"
      shell: |
        kind load docker-image \
          {{ Jannah.stages.bootstrap.deploy.helm_values.common.repository }}/{{ Jannah.stages.bootstrap.deploy.helm_values.images.middleware.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.amd }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.ubuntu }}:{{ Jannah.stages.bootstrap.deploy.helm_values.common.tag }};
      when: ( 
              ansible_facts['architecture'] == "x86_64"
              and
              jannah_stages_bootstrap_deploy_destination == "kind"
            )
      async: 9800
      poll: 5
      args:
        chdir: "{{ Jannah.global.ansible.working_dir }}/tmp/EPHEMERAL/images/ubuntu/middleware/jannah_graphql"
      tags:
        - "prepare_images"
        - "molecule_prepare"
        - "operator_e2e"
    - name: "Push Ubuntu middleware image - amd64"
      shell: |
        docker push \
          {{ Jannah.stages.bootstrap.deploy.helm_values.common.repository }}/{{ Jannah.stages.bootstrap.deploy.helm_values.images.middleware.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.amd }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.ubuntu }}:{{ Jannah.stages.bootstrap.deploy.helm_values.common.tag }};
      when: ( 
              ansible_facts['architecture'] == "x86_64"
              and
              jannah_stages_bootstrap_deploy_push_middleware_ubuntu_image == True 
            )
      async: 9800
      poll: 5
      args:
        chdir: "{{ Jannah.global.ansible.working_dir }}/tmp/EPHEMERAL/images/ubuntu/middleware/jannah_graphql"
      tags:
        - "prepare_images"
        - "molecule_prepare"
        - "operator_e2e"
  rescue:
    - name: "Tag and Push Ubuntu Middleware Docker Images Exception"
      ansible.builtin.debug:
        msg: "Tag and Push Ubuntu Middleware Docker Images Exception"
      tags:
        - "prepare_images"
        - "prepare_ubuntu_images"
        - "molecule_prepare"
        - "operator_e2e"
    - name: Re-emit failure
      vars:
        failed_task:
          result: '{{ ansible_failed_result }}'
      fail:
        msg: '{{ failed_task }}'
      tags:
        - "prepare_images"
        - "prepare_ubuntu_images"
        - "molecule_prepare"
        - "operator_e2e"
  ignore_errors: false
