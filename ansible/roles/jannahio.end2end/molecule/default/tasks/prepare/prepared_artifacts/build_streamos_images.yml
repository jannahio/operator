---
- name: "Tag and push streamos docker images for use in Helm Chart"
  block:
    - name: "set_fact jannah_stages_bootstrap_deploy_push_boot_streamos_image"
      ansible.builtin.set_fact:
        jannah_stages_bootstrap_deploy_destination: "{{ Jannah.stages.bootstrap.deploy.helm_values.images.boot.dockerfiles.push }}"
      tags:
        - "prepare_images"
        - "molecule_prepare"
        - "operator_e2e"
    - name: "set_fact jannah_stages_bootstrap_deploy_destination"
      ansible.builtin.set_fact:
        jannah_stages_bootstrap_deploy_destination: "{{ Jannah.stages.bootstrap.deploy.destination }}"
      tags:
        - "deploy_storage"
        - "molecule_prepare"
        - "operator_e2e"
    - name: "Tag StreamOs boot image - arm64"
      shell: |
        docker tag \
          {{ Jannah.stages.bootstrap.deploy.helm_values.images.boot.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.arm }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.streamos }}:{{ Jannah.stages.bootstrap.deploy.helm_values.common.tag }} \
          {{ Jannah.stages.bootstrap.deploy.helm_values.common.repository }}/{{ Jannah.stages.bootstrap.deploy.helm_values.images.boot.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.arm }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.streamos }}:{{ Jannah.stages.bootstrap.deploy.helm_values.common.tag }};
      when:  ansible_facts['architecture'] != "x86_64" 
      async: 9800
      poll: 5
      args:
        chdir: "{{ Jannah.global.ansible.working_dir }}/tmp/EPHEMERAL/images/streamos"
      tags:
        - "prepare_images"
        - "molecule_prepare"
        - "operator_e2e"
    - name: "Push StreamOs boot image - arm64 - kind cluster" 
      shell: |
        kind load docker-image  --name "{{ Jannah.stages.bootstrap.deploy.kind.name }}" \
          {{ Jannah.stages.bootstrap.deploy.helm_values.common.repository }}/{{ Jannah.stages.bootstrap.deploy.helm_values.images.boot.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.arm }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.streamos }}:{{ Jannah.stages.bootstrap.deploy.helm_values.common.tag }};
      when:  (
                ansible_facts['architecture'] != "x86_64" 
                and 
                jannah_stages_bootstrap_deploy_destination == "kind"
              )
      async: 9800
      poll: 5
      args:
        chdir: "{{ Jannah.global.ansible.working_dir }}/tmp/EPHEMERAL/images/streamos"
      tags:
        - "prepare_images"
        - "molecule_prepare"
        - "operator_e2e"
    - name: "Push StreamOs boot image - arm64"
      shell: |
        docker push \
          {{ Jannah.stages.bootstrap.deploy.helm_values.common.repository }}/{{ Jannah.stages.bootstrap.deploy.helm_values.images.boot.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.arm }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.streamos }}:{{ Jannah.stages.bootstrap.deploy.helm_values.common.tag }};
      when:  (
                ansible_facts['architecture'] != "x86_64" 
                and 
                jannah_stages_bootstrap_deploy_push_boot_streamos_image == True
              )
      async: 9800
      poll: 5
      args:
        chdir: "{{ Jannah.global.ansible.working_dir }}/tmp/EPHEMERAL/images/streamos"
      tags:
        - "prepare_images"
        - "molecule_prepare"
        - "operator_e2e"
    - name: "Tag StreamOs boot image - amd64"
      shell: |
        docker tag \
          {{ Jannah.stages.bootstrap.deploy.helm_values.images.boot.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.amd }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.streamos }}:{{ Jannah.stages.bootstrap.deploy.helm_values.common.tag }} \
          {{ Jannah.stages.bootstrap.deploy.helm_values.common.repository }}/{{ Jannah.stages.bootstrap.deploy.helm_values.images.boot.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.amd }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.streamos }}:{{ Jannah.stages.bootstrap.deploy.helm_values.common.tag }};
      when: (
              ansible_facts['architecture'] == "x86_64" 
            )
      async: 9800
      poll: 5
      args:
        chdir: "{{ Jannah.global.ansible.working_dir }}/tmp/EPHEMERAL/images/streamos"
      tags:
        - "prepare_images"
        - "molecule_prepare"
        - "operator_e2e"
    - name: "Push StreamOs boot image - amd64 - kind cluster"
      shell: |
        kind load docker-image  --name "{{ Jannah.stages.bootstrap.deploy.kind.name }}" \
          {{ Jannah.stages.bootstrap.deploy.helm_values.common.repository }}/{{ Jannah.stages.bootstrap.deploy.helm_values.images.boot.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.amd }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.streamos }}:{{ Jannah.stages.bootstrap.deploy.helm_values.common.tag }};
      when: (
              ansible_facts['architecture'] == "x86_64" 
              and 
              jannah_stages_bootstrap_deploy_destination == "kind"
            )
      async: 9800
      poll: 5
      args:
        chdir: "{{ Jannah.global.ansible.working_dir }}/tmp/EPHEMERAL/images/streamos"
      tags:
        - "prepare_images"
        - "molecule_prepare"
        - "operator_e2e"
    - name: "Push StreamOs boot image - amd64"
      shell: |
        docker push \
          {{ Jannah.stages.bootstrap.deploy.helm_values.common.repository }}/{{ Jannah.stages.bootstrap.deploy.helm_values.images.boot.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.amd }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.streamos }}:{{ Jannah.stages.bootstrap.deploy.helm_values.common.tag }};
      when: (
              ansible_facts['architecture'] == "x86_64" 
              and 
              jannah_stages_bootstrap_deploy_push_boot_streamos_image == True
            )
      async: 9800
      poll: 5
      args:
        chdir: "{{ Jannah.global.ansible.working_dir }}/tmp/EPHEMERAL/images/streamos"
      tags:
        - "prepare_images"
        - "molecule_prepare"
        - "operator_e2e"
    - name: "Import prepare build image tasks - streamos middleware and frontend"
      include_tasks: '{{ prepare_streamos_middleware_and_frontend_task_items }}'
      with_fileglob:
        - build_streamos_middleware_images.yml
        - build_streamos_frontend_images.yml
      loop_control:
        loop_var: prepare_streamos_middleware_and_frontend_task_items
      tags:
        - "prepare_images"
        - "molecule_prepare"
        - "operator_e2e"
  rescue:
    - name: "Builds and StreamOs Docker Images Exception"
      ansible.builtin.debug:
        msg: 'Builds StreamOs Docker Images Exception'
      tags:
        - "prepare_images"
        - "molecule_prepare"
        - "operator_e2e"
    - name: Re-emit failure
      vars:
        failed_task:
          result: '{{ ansible_failed_result }}'
      fail:
        msg: '{{ failed_task }}'
      tags:
        - "prepare_images"
        - "molecule_prepare"
        - "operator_e2e"
  ignore_errors: false
