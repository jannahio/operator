---
#   On MacOs M2 or Multipass/Ubuntu, prepare inline for Docker Desktop.
# ('os_family' not in ansible_facts) or  (ansible_facts['os_family'] == "Darwin")
- name: "Prepare Jannah Tasks"
  block:
    - name: "Import prepare  docker desktop tasks - Darwin"
      include_tasks: '{{ prepare_macos_docker_desktop_task_items }}'
      with_fileglob:
        - macos_docker_desktop.yml
      loop_control:
        loop_var: prepare_macos_docker_desktop_task_items
      when: ansible_facts['os_family'] == "Darwin"
      tags:
        - "docker_desktop_infra"
        - "molecule_prepare"
        - "operator_e2e"
#    - name: "Import prepare build_base_image tasks - Darwin"
#      include_tasks: '{{ prepare_build_base_image_task_items }}'
#      with_fileglob:
#        - build_base_image.yml
#      loop_control:
#        loop_var: prepare_build_base_image_task_items
#      when: ansible_facts['os_family'] == "Darwin"
#      tags:
#        - "docker_desktop_infra"
#        - "molecule_prepare"
#        - "operator_e2e"
    - name: "Import prepare build streamos images tasks - StreamOS"
      include_tasks: '{{ prepare_build_streamos_images_task_items }}'
      with_fileglob:
        - build_streamos_images.yml
      loop_control:
        loop_var: prepare_build_streamos_images_task_items
      when: ansible_facts['os_family'] == "Darwin" or ansible_facts['os_family'] != "Debian"
      tags:
        - "docker_desktop_infra"
        - "molecule_prepare"
        - "operator_e2e"
    - name: "Import prepare build ubuntu images tasks"
      include_tasks: '{{ prepare_build_ubuntu_images_task_items }}'
      with_fileglob:
        - build_ubuntu_images.yml
      loop_control:
        loop_var: prepare_build_ubuntu_images_task_items
      when: ansible_facts['os_family'] == "Darwin" or ansible_facts['os_family'] == "Debian"
      tags:
        - "docker_desktop_infra"
        - "molecule_prepare"
        - "operator_e2e"
  rescue:
    - name: "Prepare Jannah Tasks Exception"
      ansible.builtin.debug:
        msg: 'Prepare Jannah Tasks Exception'
      register: prepare_jannah_tasks_debug_resources
    - debug: var=prepare_jannah_tasks_debug_resources
      tags:
        - "perpare_jannah"
        - "operator_e2e"
    - name: Re-emit failure
      vars:
        failed_task:
          result: '{{ ansible_failed_result }}'
      fail:
        msg: '{{ failed_task }}'
  ignore_errors: false
