---
- name: "Remove Registries for Jannah Deployment Tasks"
  block:
    - name: "set_fact jannah_stages_bootstrap_deploy_os"
      ansible.builtin.set_fact:
        jannah_stages_bootstrap_deploy_os: "{{ Jannah.stages.bootstrap.deploy.os }}"
      tags:
        - "remove_registries"
        - "molecule_destroy"
        - "operator_e2e"
    - name: "set_fact jannah_stages_bootstrap_deploy_type"
      ansible.builtin.set_fact:
        jannah_stages_bootstrap_deploy_type: "{{ Jannah.stages.bootstrap.deploy.type }}"
      tags:
        - "remove_registries"
        - "molecule_destroy"
        - "operator_e2e"
    - name: "set_fact jannah_stages_bootstrap_deploy_destination"
      ansible.builtin.set_fact:
        jannah_stages_bootstrap_deploy_destination: "{{ Jannah.stages.bootstrap.deploy.destination }}"
      tags:
        - "remove_registries"
        - "molecule_destroy"
        - "operator_e2e"
    # Using both docker and quay registries for now (10/14/2023)
    - name: "Import prepare  registry tasks - Darwin"
      include_tasks: '{{ prepare_registry_task_items }}'
      with_fileglob:
        - docker_registry.yml
        - quay_registry.yml
      loop_control:
        loop_var: prepare_registry_task_items
      when: (
              ansible_facts['os_family'] == "Darwin"
              and
              (
                jannah_stages_bootstrap_deploy_destination == "docker-desktop"
                or
                jannah_stages_bootstrap_deploy_destination == "kind"
            )
      tags:
        - "docker_desktop_infra"
        - "molecule_destroy"
        - "operator_e2e"
  rescue:
    - name: "Remove Registry Tasks Exception"
      ansible.builtin.debug:
        msg: 'Remove Registry Tasks Exception'
      register: remove_registry_tasks_debug_resources
      tags:
        - "remove_registries"
        - "molecule_destroy"
        - "operator_e2e"
    - debug: var=remove_registry_tasks_debug_resources
      tags:
        - "remove_registries"
        - "molecule_destroy"
        - "operator_e2e"
    - name: Re-emit failure
      vars:
        failed_task:
          result: '{{ ansible_failed_result }}'
      fail:
        msg: '{{ failed_task }}'
      tags:
        - "remove_registries"
        - "molecule_destroy"
        - "operator_e2e"
  ignore_errors: false
