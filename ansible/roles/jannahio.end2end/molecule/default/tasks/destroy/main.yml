---
- name: "Destroy Jannah Environment Tasks"
  block:
    - name: "set_fact jannah_stages_bootstrap_deploy_destination"
      ansible.builtin.set_fact:
        jannah_stages_bootstrap_deploy_destination: "{{ Jannah.stages.bootstrap.deploy.destination }}"
      tags:
        - "molecule_destroy"
        - "operator_e2e"
    - name: "set_fact jannah_stages_bootstrap_deploy_mode"
      ansible.builtin.set_fact:
        jannah_stages_bootstrap_deploy_mode: "{{ Jannah.stages.bootstrap.deploy.mode }}"
      tags:
        - "molecule_destroy"
        - "operator_e2e"
    - name: "Import cleanup registry,secrets tasks - Darwin"
      include_tasks: '{{ remove_registry_secrete_task_items }}'
      with_fileglob:
        - clusters/secrets/main.yl
        - clusters/registry/main.yml
      loop_control:
        loop_var: remove_registry_secrete_task_items
      when: (
              ansible_facts['os_family'] == "Darwin" and 
              (
                jannah_stages_bootstrap_deploy_destination == "docker-desktop"
                or 
                jannah_stages_bootstrap_deploy_destination == "kind"
              )
              and 
              jannah_stages_bootstrap_deploy_mode == "dev"
            )
      tags:
        - "molecule_destroy"
        - "operator_e2e"
    - name: "Import cleanup tasks - Darwin"
      include_tasks: '{{ cleanup_task_darwin_items }}'
      with_fileglob:
        - prepared_artifacts/main.yml
        - clusters/kind/main.yml
      loop_control:
        loop_var: cleanup_task_darwin_items
      when: ansible_facts['os_family'] == "Darwin"
      tags:
        - "molecule_destroy"
        - "operator_e2e"
    - name: "docker container prune -f -a"
      shell: |
        docker container prune -f
      async: 600
      poll: 5
      args:
        chdir: "{{ Jannah.global.ansible.working_dir }}"
      tags:
        - "cleanup_base_images"
        - "molecule_destroy"
        - "operator_e2e"
    # - name: "docker image prune -f -a"
    #   shell: |
    #     docker image prune -f -a
    #   async: 600
    #   poll: 5
    #   args:
    #     chdir: "{{ Jannah.global.ansible.working_dir }}"
    #   tags:
    #     - "cleanup_base_images"
    #     - "molecule_destroy"
    #     - "operator_e2e"
    - name: "Remove $MOLECULE_EPHEMERAL_DIRECTORY"
      file:
        path: "${MOLECULE_EPHEMERAL_DIRECTORY}"
        state: absent
      tags:
        - "cleanup_ephemeral_directory"
        - "molecule_destroy"
        - "operator_e2e"
    - name: "Remove {{ Jannah.global.ansible.working_dir }}/tmp"
      file:
        path: "{{ Jannah.global.ansible.working_dir }}/tmp"
        state: absent
      no_log: false
      tags:
        - "cleanup_tmp_directory"
        - "molecule_destroy"
        - "operator_e2e"
  rescue:
    - name: "Destroy Jannah Environment Exception"
      ansible.builtin.debug:
        msg: 'Destroy Jannah Environment Exception'
      tags:
        - "molecule_destroy"
        - "operator_e2e"
        - "cleanup_tmp_directory"
        - "cleanup_ephemeral_directory"
        - "cleanup_base_images"
    - name: "Print return information from the previous task"
      ansible.builtin.debug:
        var: ansible_facts['architecture']
      tags:
        - "molecule_destroy"
        - "operator_e2e"
        - "cleanup_tmp_directory"
        - "cleanup_ephemeral_directory"
        - "cleanup_base_images"
    - name: Re-emit failure
      vars:
        failed_task:
          result: '{{ ansible_failed_result }}'
      fail:
        msg: '{{ failed_task }}'
      tags:
        - "molecule_destroy"
        - "operator_e2e"
        - "cleanup_tmp_directory"
        - "cleanup_ephemeral_directory"
        - "cleanup_base_images"
  ignore_errors: false
  no_log: false
