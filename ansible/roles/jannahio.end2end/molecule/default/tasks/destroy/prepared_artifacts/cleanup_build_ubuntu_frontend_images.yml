---
- name: "Remove Builds from Ubuntu frontend docker images"
  block:
    - name: "Remove /images/ubuntu/frontend directory"
      file:
        path: "{{ Jannah.global.ansible.working_dir }}/tmp/EPHEMERAL/images/ubuntu/frontend"
        state: absent
      tags:
        - "destroy_ubuntu_frontend_images"
        - "destroy_frontend_images"
        - "molecule_destroy"
        - "operator_e2e"
    - name: "Remove frontend/ubuntu.frontend.Dockerfile"
      file:
        dest: "{{ Jannah.global.ansible.working_dir }}/tmp/EPHEMERAL/images/ubuntu/frontend/web/JannahIonic/ubuntu.frontend.Dockerfile"
        state: absent
      tags:
        - "destroy_ubuntu_frontend_images"
        - "destroy_frontend_images"
        - "molecule_destroy"
        - "operator_e2e"
    - name: "Remove ubuntu/ubuntu.frontend.Dockerfile.dockerignore"
      file:
        path: "{{ Jannah.global.ansible.working_dir }}/tmp/EPHEMERAL/images/ubuntu/frontend/web/JannahIonic/ubuntu.frontend.Dockerfile.dockerignore"
        state: absent
      tags:
        - "destroy_ubuntu_frontend_images"
        - "destroy_frontend_images"
        - "molecule_destroy"
        - "operator_e2e"
    - name: "Remove Ubuntu frontend image - arm64"
      shell: |
        docker image rm -f \
        {{ Jannah.stages.bootstrap.deploy.helm_values.images.frontend.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.arm }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.ubuntu }}:{{ Jannah.stages.bootstrap.deploy.helm_values.common.tag }};
        exit 0;
      when: ansible_facts['architecture'] != "x86_64"
      async: 600
      poll: 5
      tags:
        - "destroy_ubuntu_frontend_images"
        - "destroy_frontend_images"
        - "molecule_destroy"
        - "operator_e2e"
    - name: "Remove Ubuntu frontend repository/image - arm64"
      shell: |
        docker image rm -f \
        {{ Jannah.stages.bootstrap.deploy.helm_values.common.repository }}/{{ Jannah.stages.bootstrap.deploy.helm_values.images.frontend.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.arm }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.ubuntu }}:{{ Jannah.stages.bootstrap.deploy.helm_values.common.tag }};
        exit 0;
      when: ansible_facts['architecture'] != "x86_64"
      async: 600
      poll: 5
      tags:
        - "destroy_ubuntu_frontend_images"
        - "destroy_frontend_images"
        - "molecule_destroy"
        - "operator_e2e"
    - name: "Remove Ubuntu frontend image - amd64"
      shell: |
        docker image rm -f \
        {{ Jannah.stages.bootstrap.deploy.helm_values.images.frontend.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.amd }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.ubuntu }}:{{ Jannah.stages.bootstrap.deploy.helm_values.common.tag }};
        exit 0;
      when: ansible_facts['architecture'] == "x86_64"
      async: 600
      poll: 5
      tags:
        - "destroy_ubuntu_frontend_images"
        - "destroy_frontend_images"
        - "molecule_destroy"
        - "operator_e2e"
    - name: "Remove Ubuntu frontend repository/image - amd64"
      shell: |
        docker image rm -f \
        {{ Jannah.stages.bootstrap.deploy.helm_values.common.repository }}/{{ Jannah.stages.bootstrap.deploy.helm_values.images.frontend.name }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.amd }}-{{ Jannah.stages.bootstrap.deploy.helm_values.common.ubuntu }}:{{ Jannah.stages.bootstrap.deploy.helm_values.common.tag }};
        exit 0;
      when: ansible_facts['architecture'] == "x86_64"
      async: 600
      poll: 5
      tags:
        - "destroy_ubuntu_frontend_images"
        - "destroy_frontend_images"
        - "molecule_destroy"
        - "operator_e2e"
  rescue:
    - name: "Builds Ubuntu Frontend Docker Images Exception"
      ansible.builtin.debug:
        msg: 'Builds Ubuntu Frontend Docker Images Exception'
    - name: Re-emit failure
      vars:
        failed_task:
          result: '{{ ansible_failed_result }}'
      fail:
        msg: '{{ failed_task }}'
      tags:
        - "destroy_ubuntu_frontend_images"
        - "destroy_frontend_images"
        - "molecule_destroy"
        - "operator_e2e"
  ignore_errors: false
